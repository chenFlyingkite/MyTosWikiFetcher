Your Output (stdout)
4
5
Debug output
arr = [4, 2, 5, 1, 6]

Your Output (stdout)
3
8
9
10
10
10
10
Debug output
arr = [2, 3, 4, 4, 5, 9, 7, 8, 6, 10, 4, 5, 10, 10, 8, 4, 6, 4, 10, 1]

Compiler Message
Time limit exceeded
Allowed time limit:4 secs
Your code did not execute in time. Please optimize your code. For more details on runtime environment, click the “Info” button
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [8, 34, 40, 2, 2, 22, 32, 22, 3, 32, 7, 31, 16, 29, 22, 46, 45, 10, 45, 46, 45, 23, 16, 4, 45, 12, 5, 39, 45, 4, 47, 31, 1, 7, 35, 12, 27, 8, 46, 47, 50, 27, 14, 26, 11, 20, 45, 15, 38, 24, 10, 13, 6, 6, 9, 17, 13, 28, 43, 41, 33, 46, 17, 21, 25, 4, 9, 3, 32, 33, 4, 50, 24, 30, 37, 27, 34, 13, 15, 9, 37, 26, 38, 16, 19, 47, 3, 43, 22, 13, 28, 17, 23, 35, 44, 17, 32]

Compiler Message
Time limit exceeded
Allowed time limit:4 secs
Your code did not execute in time. Please optimize your code. For more details on runtime environment, click the “Info” button
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [26, 87, 47, 48, 51, 34, 55, 36, 8, 45, 13, 6, 51, 52, 69, 99, 99, 44, 27, 87, 63, 35, 22, 93, 5, 97, 90, 9, 25, 56, 11, 63, 53, 6, 96, 68, 45, 70, 75, 81, 53, 5, 70, 40, 11, 56, 16, 19, 88, 71, 85, 83, 39, 33, 85, 46, 44, 62, 86, 97, 37, 93, 22, 35, 5, 71, 2, 97, 80, 80, 83, 33, 83, 5, 21, 2, 12, 2, 95, 16, 58, 25, 55, 45, 19, 71, 32, 47, 34, 18, 21, 62, 60, 89, 1, 11, 53, 66, 15, 18, 31, 41, 70, 72, 22, 47, 58, 59, 91, 57, 93, 11, 29, 88, 39, 17, 1, 51, 99, 6, 66, 42, 84, 10, 39, 50, 63, 84, 90, 66, 24]

Compiler Message
Time limit exceeded
Allowed time limit:4 secs
Your code did not execute in time. Please optimize your code. For more details on runtime environment, click the “Info” button
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [464, 389, 304, 291, 360, 68, 222, 338, 218, 244, 486, 21, 152, 460, 183, 270, 468, 429, 204, 352, 229, 94, 424, 414, 23, 386, 12, 60, 482, 445, 300, 296, 229, 134, 333, 439, 359, 260, 18, 17, 331, 330, 160, 357, 221, 178, 96, 390, 227, 152, 193, 282, 59, 402, 50, 241, 423, 125, 417, 321, 205, 354, 143, 214, 208, 112, 245, 396, 351, 363, 131, 29, 119, 371, 12, 362, 284, 73, 77, 289, 453, 144, 174, 440, 377, 374, 453, 60, 157, 412, 245, 10, 3, 297, 316, 35, 84, 60, 97, 404, 161, 411, 44, 273, 227, 317, 379, 476, 237, 424, 166, 82, 137, 458, 449, 357, 437, 282, 20, 269, 402, 409, 327, 408, 48, 200, 31, 87, 158, 478, 295, 30, 336, 188, 78, 352, 220, 83, 413, 102, 492, 241, 4, 308, 88, 490, 334, 458, 146, 18, 487, 455, 164, 157, 423, 405, 155, 415, 70, 188, 158, 439, 323, 459, 415, 121, 320, 194, 299, 28, 220, 60, 142, 312, 177, 206, 66, 107, 195, 169, 145, 303, 183, 322, 302, 357, 171, 265, 275, 85, 434, 229, 183, 42, 96, 415, 318, 308, 183, 298, 149, 54, 116, 160, 268, 382, 172, 127, 27, 404, 116, 148, 13, 22, 399, 258, 194, 292, 160, 21, 100, 137, 124, 398, 267, 475, 441, 207, 365, 161, 86, 109, 410, 330, 12, 405, 360, 462, 475, 55, 4, 86, 192, 147, 100, 182, 383, 17, 17, 358, 131, 480, 303, 395, 35, 19, 69, 211, 198, 398, 422, 179, 261, 20, 274, 145, 431, 318, 367, 250, 276, 270, 110, 473, 444, 490, 478, 498, 462, 34, 158, 226, 294, 370, 403, 321, 488, 19, 188, 324, 454, 102, 167, 345, 189, 489, 205, 378, 135, 396, 370, 189, 311, 123, 165, 131, 359, 185, 29, 103, 284, 355, 244, 137, 280, 98, 244, 382, 376, 24, 103, 437, 392, 403, 483, 147, 152, 295, 284, 105, 391, 183, 384, 142, 325, 441, 448, 132, 62, 153, 142, 378, 186, 206, 304, 305, 210, 144, 117, 40, 443, 72, 235, 291, 271, 401, 476, 229, 419, 403, 186, 317, 351, 472, 280, 199, 162, 58, 73, 431, 100, 91, 51, 417, 193, 172, 55, 462, 399, 73, 486, 367, 185, 457, 145, 432, 33, 382, 119, 156, 50, 472, 268, 275, 70, 134, 335, 100, 476, 471, 495, 374, 364, 450, 284, 109, 135, 12, 302, 18, 172, 175, 358, 288, 373, 195, 337, 39, 29, 116, 18, 317, 330, 471, 295, 485, 132, 67, 406, 295, 68, 116, 135, 331, 129, 45, 251, 349, 393, 93, 482, 347, 315, 228, 266, 444, 206, 121, 211, 361, 374, 272, 309, 444, 328, 429, 288, 292, 417, 277, 230, 114, 354, 276, 131, 449, 220, 289, 440, 368, 266, 453, 316, 201, 148, 386, 382, 184, 88, 100, 116, 289, 426, 469, 172, 260, 73, 314, 489, 116, 485, 73, 348, 80, 451, 111, 221, 36, 303, 50, 259, 199, 468, 484, 93, 250, 222, 197, 254, 182, 27, 373, 49, 50, 389, 445, 475, 252, 369, 24, 463, 290, 84, 399, 155, 327, 388, 310, 237, 67, 305, 130, 481, 255, 249, 247, 82, 239, 141, 240, 167, 174, 159, 23, 465, 25, 45, 348, 44, 65, 221, 14, 317, 46, 286, 285, 73, 162, 448, 373, 241, 314, 450, 382, 332, 44, 134, 406, 65, 282, 12, 388, 130, 329, 404, 68, 218, 191, 105, 163, 54, 26, 395, 45, 45, 105, 250, 421, 351, 236, 132, 15, 273, 104, 429, 434, 191, 1, 300, 287, 492, 268, 14, 200, 488, 235, 238, 177, 127, 194, 187, 252, 50, 291, 99, 58, 1, 412, 103, 362, 488, 352, 241, 196, 227, 199, 191, 51, 425, 445, 64, 69, 270, 406, 102, 432, 158, 16, 96, 16, 164, 39, 425, 29, 84, 117, 291, 171, 495, 477, 453, 350, 287, 393, 98, 276, 358, 303, 360, 117, 343, 170, 7, 89, 167, 380, 322, 179, 493, 76, 395, 209, 273, 412, 194, 253, 489, 259, 111, 301, 13, 357, 25, 272, 23, 373, 379, 296, 406, 193, 276, 244, 277, 146, 217, 284, 348, 143, 265, 136, 268, 459, 188, 436, 303, 121, 464, 445, 272, 490, 437, 416, 65, 254, 418, 232, 246, 116, 82, 377, 348, 476, 160, 5, 284, 363, 159, 247, 35, 325, 136, 490, 289, 344, 438, 148, 79, 167, 280, 442, 128, 251, 69, 409, 153, 236, 493, 254, 204, 60, 112, 259, 279, 470, 407, 288, 482, 280, 168, 416, 287, 274, 454, 435, 134, 160, 420, 408, 91, 436, 368, 58, 84, 420, 34, 91, 372, 93, 383, 108, 394, 184, 494, 448, 411, 210, 4, 286, 4, 419, 73, 385, 412, 215, 374, 306, 11, 326, 247, 362, 306, 20, 360, 387, 270, 213, 20, 321, 127, 311, 126, 262, 234, 62, 215, 500, 203, 80, 68, 96, 74, 69, 435, 338, 500, 41, 134, 348, 249, 116, 18, 326, 110, 160, 151, 219, 312, 202, 433, 250, 480, 169, 428, 461, 365, 42, 184, 423, 110, 69, 16, 462, 220, 122, 423, 112, 80, 225, 128, 105, 407, 151, 98, 8, 375, 312, 375, 85, 344, 462, 77, 197, 124, 465, 47, 425, 73, 48, 320, 210, 465, 151, 352, 123, 98, 32, 305, 382, 405, 356, 106, 432, 9, 15, 17, 350, 144, 345, 14, 432, 159, 348, 464, 147, 476, 369, 304, 178, 338, 8, 270, 491, 478, 295, 91, 304, 453, 399, 69, 473, 361, 301, 494, 132, 411, 495, 496, 490, 450, 360, 123, 413, 473, 385, 243, 372, 399, 395, 216, 497, 11, 408, 241, 314, 363, 92, 292, 319, 194, 182, 166, 296, 500, 496, 340, 228, 283, 445, 95, 361, 254, 130, 183, 311, 317, 294, 261]


Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:53)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr



Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:53)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 



Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:53)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr



Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 



Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [8, 10, 6, 6, 4, 8, 3, 4, 10, 4, 9, 8, 6, 5, 10, 5, 2, 4, 6, 7, 10, 5, 5, 9, 3, 3, 8, 7, 10, 7, 10, 9, 5, 9, 3, 9, 2, 1, 6, 1, 1, 8, 2, 8, 10, 7, 4, 3, 1, 8, 7, 5, 4, 4, 6, 8, 5, 4, 4, 6, 5, 4, 8, 1, 6, 9, 7, 3, 3, 10, 7, 7, 8, 5, 8, 5, 9, 7, 3, 1, 6, 9, 9, 4, 2, 4, 8, 10, 2, 2, 1, 8, 9, 1, 4, 1, 6, 10, 2, 10, 1, 2, 9, 2, 2, 2, 6, 10, 9, 2, 6, 8, 7, 5, 3, 1, 1, 6, 9, 2, 3, 2, 5, 9, 4, 6, 1, 2, 8, 1, 3, 9, 1, 10, 9, 5, 9, 3, 4, 2, 7, 8, 6, 2, 8, 6, 2, 5, 1, 2, 5, 4, 10, 3, 4, 3, 4, 6, 7, 1, 6, 6, 1, 9, 4, 10, 9, 1, 5, 8, 3, 6, 10, 8, 5, 5, 2, 4, 2, 6, 5, 7, 10, 1, 4, 7, 5, 2, 2, 2, 7, 6, 10, 7, 4, 6, 4, 1, 10, 4, 8, 10, 9, 4, 5, 8, 7, 10, 8, 2, 5, 9, 5, 10, 10, 10, 3, 5, 7, 5, 5, 5, 3, 10, 3, 9, 10, 9, 4, 3, 10, 1, 7, 3, 7, 7, 10, 2, 1, 5, 2, 10, 5, 9, 10, 2, 3, 5, 9, 2, 4, 6, 7, 4, 2, 6, 4, 3, 9, 9, 9, 4, 8, 4, 5, 7, 8, 8, 5, 5, 6, 9, 3, 8, 1, 9, 9, 5, 8, 5, 9, 4, 9, 2, 4, 3, 5, 3, 8, 3, 2, 1, 9, 9, 2, 6, 5, 7, 3, 1, 10, 8, 5, 3, 7, 5, 1, 6, 1, 1, 6, 7, 2, 5, 4, 9, 1, 8, 3, 5, 6, 7, 3, 3, 6, 3, 7, 8, 2, 2, 10, 6, 7, 1, 1, 7, 1, 9, 6, 9, 6, 8, 5, 2, 5, 4, 10, 6, 8, 9, 5, 8, 5, 7, 3, 4, 1, 9, 3, 9, 9, 1, 7, 9, 8, 8, 7, 6, 8, 2, 10, 4, 7, 6, 4, 6, 7, 4, 8, 6, 5, 3, 3, 9, 9, 3, 5, 4, 1, 1, 4, 1, 6, 7, 1, 8, 1, 7, 7, 6, 1, 2, 2, 5, 5, 8, 8, 7, 9, 3, 9, 1, 2, 5, 4, 8, 4, 1, 5, 2, 3, 4, 1, 3, 2, 6, 4, 7, 9, 5, 3, 3, 4, 5, 3, 4, 1, 4, 9, 1, 1, 1, 10, 4, 9, 10, 9, 3, 7, 4, 1, 6, 6, 4, 1, 9, 5, 5, 6, 9, 6, 5, 6, 3, 5, 4, 9, 3, 4, 4, 8, 6, 10, 6, 3, 4, 4, 5, 2, 8, 2, 8, 9, 8, 5, 4, 7, 7, 4, 4, 8, 4, 8, 9, 1, 4, 8, 2, 1, 9, 3, 8, 5, 2, 5, 2, 1, 6, 4, 3, 5, 2, 4, 3, 5, 2, 1, 3, 8, 7, 2, 7, 7, 10, 7, 3, 10, 7, 10, 6, 4, 6, 8, 8, 1, 1, 9, 3, 1, 1, 8, 1, 6, 3, 6, 8, 3, 8, 10, 4, 4, 9, 1, 7, 5, 10, 1, 2, 6, 9, 1, 9, 3, 4, 2, 8, 4, 2, 8, 8, 5, 7, 5, 4, 5, 9, 3, 7, 2, 1, 6, 8, 5, 8, 3, 4, 2, 3, 9, 9, 4, 9, 8, 6, 5, 7, 7, 7, 1, 2, 3, 4, 9, 10, 2, 9, 6, 10, 1, 5, 6, 4, 5, 1, 9, 10, 8, 3, 8, 6, 5, 8, 10, 7, 3, 1, 3, 4, 3, 7, 2, 1, 6, 2, 5, 5, 8, 6, 3, 5, 5, 8, 6, 9, 10, 5, 1, 7, 2, 1, 7, 7, 7, 5, 6, 2, 9, 10, 2, 6, 10, 3, 9, 8, 3, 5, 1, 6, 2, 1, 6, 4, 6, 7, 10, 9, 9, 5, 7, 10, 9, 8, 1, 3, 3, 1, 4, 4, 8, 2, 1, 1, 7, 1, 10, 8, 4, 9, 3, 7, 8, 8, 5, 6, 3, 8, 6, 6, 9, 9, 9, 10, 2, 5, 5, 10, 9, 2, 7, 8, 5, 5, 8, 10, 3, 1, 7, 10, 10, 10, 2, 3, 4, 8, 1, 2, 2, 2, 1, 1, 8, 1, 1, 9, 3, 5, 5, 2, 3, 7, 9, 4, 9, 4, 8, 8, 4, 1, 3, 1, 8, 6, 1, 2, 4, 9, 10, 7, 8, 5, 4, 9, 9, 3, 3, 6, 6, 5, 4, 2, 7, 2, 7, 9, 4, 3, 9, 9, 8, 7, 7, 7, 2, 7, 7, 1, 3, 6, 3, 3, 7, 5, 9, 5, 6, 2, 1, 3, 7, 1, 5, 1, 8, 1, 10, 8, 5, 4, 5, 4, 10, 7, 5, 3, 7, 8, 4, 6, 8, 4, 1, 3, 9, 4, 10, 5, 6, 2, 4, 4, 7, 5, 10, 3, 9, 3, 3, 3, 1, 10, 3, 9, 4, 9, 7, 9, 10, 1, 6, 8, 6, 1, 7, 9, 2, 6, 2, 1, 7, 10, 1, 9, 9, 7, 9, 5, 3, 5, 3, 10, 10, 5, 5, 5, 4, 2, 7, 4, 2, 1, 10, 5, 7, 2, 1, 8, 5, 4, 10, 7, 8, 7, 10, 8, 4, 5, 7, 3, 7, 5, 10, 9, 2, 10, 9, 9, 7, 6, 6, 10, 4, 5, 1, 7, 5, 9, 6, 2, 10, 8, 5, 6, 2, 2, 5, 6, 7, 9, 9, 6, 2, 10, 2, 10, 6, 4, 5, 1, 8, 6, 3, 7, 2, 7, 1, 2, 6, 7, 7, 5, 6, 10, 9, 5, 8, 7, 6, 8, 8, 4, 2, 9, 6, 1, 5, 9, 1, 10, 1, 1, 7, 4, 3, 5, 1, 4, 1, 3, 7, 6, 3, 4, 10, 1, 4, 6, 10, 5, 2, 2, 4, 4, 5, 2, 10, 2, 5, 1, 1, 3, 7, 10, 7, 1, 7, 2, 2, 8, 9, 5, 7, 9, 8, 9, 6, 9, 4, 5, 5, 5, 8, 4, 7, 8, 1, 6, 6, 4, 9, 2, 5, 10, 10, 8, 4, 8, 2, 2, 2, 4, 2, 6, 3, 5, 1, 6, 7, 5, 7, 5, 8, 10, 9, 7, 7, 1, 2, 2, 6, 3, 1, 9, 9, 5, 10, 8, 1, 4, 7, 8, 7, 10, 1, 9, 4, 9, 5, 7, 2, 1, 4, 7, 4, 3, 4, 7, 8, 9, 7, 5, 5, 7, 4, 10, 5, 2, 5, 5, 2, 4, 8, 5, 6, 10, 10, 9, 8, 7, 4, 5, 3, 3, 4, 3, 4, 2, 6, 6, 6, 10, 7, 2, 5, 9, 8, 10, 1, 5, 2, 10, 7, 1, 6, 9, 10, 4, 5, 2, 10, 8, 9, 8, 8, 7, 10, 4, 8, 4, 2, 1, 7, 3, 6, 3, 8, 2, 2, 1, 8, 8, 2, 3, 2, 8, 4, 2, 9, 2, 3, 5, 10, 9, 1, 1, 10, 10, 9, 6, 7, 10, 5, 4, 4, 9, 8, 9, 7, 2, 4, 1, 3, 9, 10, 8, 2, 1, 5, 9, 7, 8, 2, 7, 3, 2, 9, 5, 5, 8, 1, 4, 2, 4, 9, 6, 9, 3, 1, 1, 8, 10, 8, 3, 6, 4, 10, 8, 10, 8, 1, 5, 8, 3, 7, 8, 5, 5, 6, 1, 10, 9, 5, 5, 9, 8, 7, 2, 9, 7, 4, 2, 1, 3, 3, 10, 6, 4, 5, 8, 2, 4, 1, 2, 8, 1, 5, 8, 6, 3, 6, 3, 5, 6, 2, 4, 3, 4, 4, 6, 4, 1, 5, 4, 5, 7, 8, 8, 10, 10, 10, 6, 10, 2, 8, 6, 1, 8, 7, 3, 6, 10, 9, 6, 9, 5, 10, 4, 1, 8, 6, 6, 2, 9, 1, 10, 4, 7, 1, 1, 9, 3, 8, 2, 4, 7, 3, 10, 7, 5, 1, 1, 7, 5, 3, 4, 7, 1, 7, 5, 9, 5, 7, 6, 5, 5, 10, 8, 6, 9, 9, 6, 1, 9, 6, 7, 8, 3, 3, 10, 1, 7, 9, 1, 6, 5, 8, 5, 7, 7, 2, 1, 5, 7, 7, 8, 4, 7, 8, 1, 8, 10, 1, 8, 6, 10, 6, 5, 10, 5, 10, 7, 5, 4, 3, 5, 4, 8, 8, 5, 7, 10, 8, 4, 5, 7, 5, 3, 1, 2, 7, 4, 5, 5, 9, 9, 3, 10, 8, 3, 1, 8, 1, 1, 3, 8, 8, 2, 10, 4, 3, 4, 7, 5, 1, 5, 6, 8, 4, 2, 4, 9, 2, 4, 2, 7, 4, 2, 5, 3, 4, 7, 7, 3, 5, 9, 1, 3, 4, 4, 10, 10, 1, 7, 2, 8, 2, 2, 1, 1, 7, 6, 8, 1, 7, 10, 3, 7, 9, 6, 9, 7, 4, 2, 9, 4, 6, 4, 1, 1, 9, 4, 4, 1, 2, 8, 3, 3, 9, 7, 6, 6, 5, 6, 3, 9, 1, 4, 7, 2, 1, 7, 1, 10, 2, 8, 6, 9, 5, 3, 2, 6, 3, 5, 5, 4, 6, 10, 5, 4, 6, 2, 7, 8, 4, 4, 1, 9, 8, 7, 7, 3, 6, 6, 2, 2, 10, 6, 4, 9, 10, 9, 6, 4, 4, 9, 9, 3, 1, 8, 4, 2, 1, 7, 10, 2, 5, 1, 10, 3, 10, 3, 1, 7, 3, 6, 6, 9, 1, 10, 9, 8, 2, 9, 1, 5, 3, 10, 7, 2, 8, 2, 6, 4, 5, 10, 1, 3, 1, 4, 4, 3, 10, 2, 3, 2, 3, 3, 6, 9, 1, 10, 10, 3, 8, 9, 8, 5, 8, 5, 3, 4, 4, 9, 2, 6, 9, 6, 3, 7, 2, 6, 2, 1, 9, 10, 8, 2, 3, 2, 3, 7, 3, 5, 5, 10, 7, 2, 7, 2, 7, 1, 9, 5, 9, 8, 5, 6, 7, 4, 4, 10, 9, 10, 5, 4, 6, 2, 10, 6, 2, 9, 7, 8, 5, 1, 3, 3, 1, 7, 8, 7, 10, 2, 9, 8, 7, 3, 10, 3, 10, 9, 8, 5, 4, 3, 9, 7, 10, 6, 4, 1, 8, 3, 3, 1, 1, 4, 5, 8, 10, 10, 10, 3, 3, 3, 2, 1, 8, 10, 8, 3, 1, 1, 6, 10, 6, 5, 5, 7, 3, 1, 6, 6, 5, 7, 6, 1, 3, 9, 3, 3, 10, 7, 1, 1, 3, 6, 1, 8, 10, 4, 5, 4, 3, 5, 3, 8, 10, 10, 9, 2, 10, 1, 1, 6, 3, 9, 4, 2, 5, 6, 4, 7, 1, 5, 10, 3, 4, 9, 1, 10, 1, 5, 9, 9, 3, 6, 6, 6, 7, 7, 9, 4, 5, 8, 7, 4, 4, 10, 10, 2, 2, 10, 6, 7, 8, 5, 3, 3, 5, 3, 4, 2, 5, 8, 7, 1, 4, 2, 2, 9, 6, 7, 7, 10, 5, 2, 9, 1, 7, 2, 3, 2, 9, 9, 8, 3, 4, 8, 10, 9, 2, 2, 1, 2, 6, 8, 9, 8, 2, 6, 6, 6, 10, 1, 9, 8, 2, 7, 10, 9, 5, 9, 4, 5, 4, 6, 7, 4, 2, 1, 1, 4, 5, 1, 1, 6, 2, 5, 6, 7, 3, 9, 10, 8, 3, 8, 8, 6, 5, 4, 5, 3, 9, 2, 6, 2, 3, 6, 3, 5, 5, 6, 6, 5, 6, 2, 9, 9, 1, 1, 9, 6, 8, 2, 5, 1, 2, 2, 5, 2, 5, 8, 3, 1, 8, 2, 9, 5, 9, 1, 8, 6, 9, 7, 3, 8, 9, 7, 4, 10, 5, 3, 5, 5, 3, 6, 2, 6, 9, 5, 8, 8, 5, 10, 9, 4, 8, 1, 7, 5, 8, 5, 9, 10, 7, 8, 1, 6, 5, 9, 2, 2, 7, 6, 2, 8, 7, 3, 3, 6, 5, 4, 8, 6, 3, 1, 8, 3, 10, 2, 1, 5, 6, 1, 3, 3, 1, 9, 2, 2, 4, 9, 7, 9, 1, 2, 3, 5, 1, 10, 4, 6, 2, 4, 9, 7, 8, 3, 10, 4, 6, 5, 6, 1, 3, 9, 7, 3, 8, 10, 4, 9, 10, 6, 1, 10, 2, 2, 2, 5, 8, 4, 10, 2, 7, 9, 8, 7, 9, 2, 3, 7, 3, 10, 4, 8, 9, 4, 8, 5, 8, 2, 6, 5, 2, 3, 1, 8, 5, 1, 5, 6, 1, 5, 9, 8, 10, 8, 4, 7, 10, 7, 2, 7, 7, 4, 4, 7, 2, 6, 7, 10, 7, 10, 2, 4, 6, 4, 2, 2, 8, 1, 2, 10, 1, 3, 6, 6, 9, 2, 10, 7, 9, 6, 2, 9, 1, 9, 8, 1, 9, 10, 2, 7, 7, 3, 8, 5, 6, 1, 7, 10, 5, 5, 1, 6, 6, 4, 1, 9, 4, 8, 5, 9, 3, 3, 3, 4, 10, 8, 7, 9, 10, 5, 1, 1, 2, 5, 6, 1, 3, 7, 8, 1, 5, 4, 5, 8, 2, 4, 8, 1, 3, 8, 3, 6, 6, 9, 7, 9, 8, 6, 7, 10, 5, 8, 10, 4, 10, 4, 5, 2, 6, 2, 3, 4, 1, 6, 5, 6, 7, 4, 7, 8, 9, 5, 7, 9, 5, 10, 9, 5, 10, 7, 10, 6, 8, 7, 6, 2, 1, 9, 4, 7, 7, 3, 9, 8, 4, 3, 7, 1, 8, 1, 6, 8, 10, 3, 10, 4, 8, 7, 10, 9, 9, 3, 4, 6, 2, 3, 3, 2, 8, 9, 7, 5, 1, 2, 2, 2, 1, 6, 8, 3, 8, 5, 5, 5, 4, 5, 1, 4, 9, 5, 2, 9, 3, 2, 7, 4, 3, 4, 3, 7, 9, 10, 1, 10, 1, 2, 7, 8, 4, 6, 9, 7, 9, 3, 9, 6, 1, 9, 5, 7, 2, 3, 4, 5, 4, 10, 6, 2, 10, 3, 3, 6, 8, 8, 2, 8, 5, 9, 7, 5, 8, 6, 7, 9, 4, 6, 1, 6, 5, 10, 2, 7, 2, 7, 6, 10, 1, 2, 5, 2, 1, 9, 10, 1, 2, 9, 4, 6, 10, 6, 3, 10, 10, 9, 7, 5, 7, 6, 10, 1, 10, 9, 7, 4, 4, 10, 7, 3, 9, 1, 6, 8, 9, 8, 8, 10, 2, 7, 7, 5, 6, 7, 7, 3, 2, 7, 8, 7, 6, 4, 5, 3, 8, 6, 4, 1, 7, 4, 4, 9, 9, 4, 3, 10, 6, 10, 5, 3, 6, 4, 9, 4, 8, 7, 2, 6, 9, 3, 5, 9, 1, 10, 7, 3, 8, 9, 9, 2, 4, 7, 8, 1, 5, 6, 2, 3, 1, 7, 2, 6, 9, 6, 6, 6, 2, 2, 7, 3, 6, 10, 9, 4, 9, 10, 7, 2, 9, 3, 9, 1, 2, 4, 4, 1, 5, 10, 7, 4, 7, 9, 2, 5, 1, 10, 9, 2, 3, 10, 3, 1, 4, 8, 5, 4, 4, 10, 5, 9, 7, 4, 4, 2, 2, 5, 5, 5, 3, 7, 1, 9, 8, 2, 8, 3, 6, 2, 7, 5, 6, 1, 10, 9, 2, 9, 9, 8, 8, 5, 6, 6, 4, 5, 8, 10, 9, 1, 6, 6, 10, 2, 5, 9, 1, 10, 9, 9, 10, 9, 7, 2, 8, 2, 1, 10, 5, 2, 1, 5, 10, 3, 7, 6, 1, 3, 1, 2, 6, 7, 2, 9, 5, 3, 9, 9, 6, 2, 7, 4, 4, 3, 10, 9, 4, 1, 7, 9, 5, 9, 1, 8, 5, 3, 3, 8, 2, 7, 7, 2, 4, 6, 8, 6, 3, 1, 7, 8, 3, 5, 8, 10, 5, 8, 7, 8, 8, 6, 9, 9, 2, 4, 6, 7, 2, 9, 6, 7, 10, 8, 2, 9, 8, 3, 3, 6, 2, 1, 3, 5, 7, 5, 3, 10, 9, 1, 9, 1, 1, 3, 1, 9, 7, 8, 5, 10, 3, 3, 1, 5, 10, 5, 4, 7, 1, 8, 4, 5, 7, 9, 1, 6, 3, 1, 3, 9, 2, 9, 5, 9, 1, 5, 10, 3, 3, 9, 10, 6, 3, 8, 5, 5, 6, 3, 8, 9, 8, 1, 3, 4, 10, 9, 5, 8, 10, 5, 2, 4, 8, 8, 6, 6, 7, 2, 9, 7, 3, 8, 3, 2, 7, 5, 7, 2, 8, 5, 2, 5, 3, 9, 8, 9, 8, 4, 6, 7, 8, 10, 6, 8, 9, 7, 2, 4, 10, 3, 4, 5, 1, 8, 6, 3, 1, 3, 10, 4, 2, 9, 6, 2, 7, 6, 8, 8, 10, 8, 7, 7, 2, 4, 4, 1, 6, 9, 8, 8, 6, 5, 6, 3, 8, 6, 2, 5, 6, 5, 7, 1, 4, 2, 2, 10, 2, 4, 4, 4, 10, 1, 3, 9, 4, 5, 6, 5, 3, 9, 6, 5, 10, 6, 8, 7, 9, 10, 5, 8, 7, 2, 1, 7, 6, 1, 7, 6, 4, 9, 9, 7, 8, 6, 1, 7, 7, 8, 7, 10, 2, 5, 1, 3, 10, 2, 1, 1, 4, 2, 4, 2, 5, 6, 10, 5, 8, 9, 2, 2, 2, 6, 9, 5, 9, 4, 8, 8, 8, 5, 10, 6, 6, 6, 10, 2, 7, 5, 9, 5, 8, 5, 5, 7, 8, 6, 7, 8, 9, 1, 8, 4, 3, 9, 3, 4, 9, 9, 4, 10, 6, 8, 4, 1, 5, 9, 7, 7, 4, 3, 2, 5, 7, 6, 5, 7, 5, 6, 9, 3, 9, 8, 10, 3, 10, 4, 2, 4, 7, 8, 2, 6, 1, 6, 8, 2, 8, 6, 9, 6, 2, 4, 2, 3, 4, 10, 6, 1, 10, 10, 9, 7, 2, 5, 5, 10, 2, 3, 2, 5, 7, 2, 3, 2, 9, 8, 8, 4, 2, 10, 2, 5, 1, 10, 2, 8, 1, 10, 3, 1, 5, 8, 4, 5, 8, 3, 6, 3, 10, 2, 9, 2, 8, 7, 5, 9, 4, 9, 1, 7, 3, 1, 6, 4, 1, 10, 7, 8, 1, 2, 5, 4, 7, 6, 2, 2, 1, 1, 4, 3, 2, 8, 8, 8, 8, 4, 4, 3, 10, 6, 3, 6, 2, 6, 3, 7, 5, 3, 9, 4, 9, 4, 1, 9, 5, 8, 10, 4, 3, 9, 2, 10, 1, 2, 1, 7, 6, 4, 2, 7, 7, 10, 5, 3, 4, 8, 7, 2, 6, 10, 4, 1, 4, 4, 8, 5, 3, 3, 9, 7, 5, 2, 10, 5, 6, 7, 2, 10, 9, 2, 8, 7, 3, 8, 4, 6, 7, 6, 8, 3, 1, 2, 8, 5, 6, 1, 7, 7, 5, 6, 2, 2, 3, 1, 7, 6, 8, 9, 1, 10, 2, 7, 3, 2, 4, 8, 9, 1, 9, 5, 1, 10, 9, 3, 2, 7, 8, 5, 10, 5, 7, 4, 5, 10, 2, 8, 4, 6, 10, 1, 10, 10, 2, 4, 7, 9, 7, 6, 2, 9, 3, 10, 6, 6, 2, 10, 2, 9, 4, 7, 1, 6, 10, 9, 5, 1, 10, 10, 3, 2, 8, 3, 7, 9, 6, 5, 6, 6, 10, 6, 2, 5, 9, 5, 6, 6, 10, 6, 2, 10, 1, 7, 6, 6, 10, 5, 9, 4, 4, 5, 10, 9, 5, 6, 6, 7, 5, 5, 9, 7, 10, 5, 1, 5, 1, 8, 9, 6, 1, 3, 4, 1, 5, 9, 7, 4, 9, 2, 7, 2, 9, 7, 2, 1, 8, 2, 3, 4, 10, 6, 6, 6, 9, 6, 10, 1, 5, 8, 10, 2, 1, 5, 7, 9, 7, 1, 6, 1, 7, 5, 7, 6, 7, 3, 8, 4, 1, 10, 3, 6, 2, 1, 9, 7, 1, 6, 3, 1, 3, 5, 5, 5, 6, 6, 8, 2, 1, 8, 4, 2, 7, 3, 9, 5, 10, 7, 4, 1, 9, 1, 2, 8, 1, 10, 10



Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:53)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [93, 85, 84, 100, 82, 97, 99, 84, 96, 96, 88, 89, 84, 95, 96, 82, 85, 92, 85, 82, 82, 90, 94, 94, 90, 93, 97, 83, 92, 93, 98, 95, 83, 90, 95, 81, 83, 94, 82, 90, 84, 96, 97, 90, 86, 94, 86, 89, 85, 80, 85, 83, 82, 80, 82, 91, 92, 83, 93, 84, 92, 85, 80, 88, 81, 98, 91, 97, 87, 94, 93, 83, 96, 98, 97, 89, 90, 84, 80, 89, 89, 82, 89, 97, 99, 90, 85, 85, 92, 85, 100, 100, 94, 82, 90, 96, 86, 88, 85, 91, 92, 84, 91, 93, 80, 87, 80, 87, 94, 99, 89, 99, 86, 83, 87, 87, 99, 96, 91, 99, 86, 94, 98, 81, 93, 84, 82, 91, 88, 95, 83, 94, 94, 88, 96, 81, 96, 88, 82, 97, 99, 91, 97, 86, 93, 98, 81, 83, 92, 99, 90, 83, 90, 92, 89, 82, 80, 94, 93, 100, 85, 82, 83, 88, 90, 89, 91, 90, 98, 87, 83, 90, 100, 86, 93, 87, 99, 88, 89, 86, 92, 86, 86, 94, 87, 98, 82, 80, 93, 94, 91, 83, 96, 93, 83, 84, 86, 99, 86, 91, 100, 98, 95, 83, 87, 90, 90, 86, 93, 93, 90, 90, 84, 89, 98, 94, 97, 91, 81, 85, 80, 91, 98, 99, 82, 95, 88, 100, 89, 96, 92, 81, 91, 93, 84, 86, 83, 89, 85, 88, 83, 98, 98, 82, 85, 97, 95, 100, 92, 87, 99, 98, 83, 87, 91, 93, 94, 96, 83, 85, 81, 81, 88, 86, 92, 98, 80, 100, 83, 88, 83, 84, 90, 95, 95, 94, 97, 80, 92, 81, 97, 95, 88, 100, 93, 90, 91, 92, 84, 85, 97, 96, 87, 90, 88, 82, 100, 94, 85, 99, 92, 99, 89, 90, 93, 83, 99, 90, 93, 84, 94, 89, 94, 83, 97, 88, 98, 96, 97, 83, 80, 80, 99, 81, 96, 96, 100, 89, 89, 82, 82, 95, 97, 90, 86, 92, 98, 96, 83, 90, 92, 94, 80, 92, 94, 83, 85, 94, 93, 89, 85, 80, 92, 89, 97, 93, 94, 90, 84, 86, 94, 80, 88, 90, 80, 88, 94, 88, 92, 93, 95, 84, 86, 95, 83, 88, 90, 90, 84, 84, 99, 98, 91, 93, 89, 93, 85, 81, 85, 81, 97, 89, 97, 88, 88, 93, 100, 92, 97, 85, 84, 80, 86, 88, 86, 97, 96, 94, 99, 90, 92, 95, 96, 80, 100, 98, 83, 81, 84, 92, 92, 98, 80, 80, 100, 100, 94, 100, 86, 89, 92, 93, 86, 89, 80, 92, 80, 83, 84, 90, 83, 100, 96, 98, 100, 91, 98, 100, 93, 98, 91, 99, 100, 83, 80, 99, 82, 99, 92, 80, 96, 93, 91, 82, 82, 81, 94, 96, 90, 80, 86, 96, 89, 96, 84, 87, 83, 80, 94, 98, 99, 90, 99, 82, 91, 87, 83, 91, 85, 80, 94, 88, 84, 99, 95, 82, 84, 90, 94, 98, 98, 97, 93, 85, 93, 88, 96, 98, 97, 84, 99, 95, 94, 85, 98, 96, 81, 87, 100, 80, 98, 98, 89, 100, 82, 83, 84, 82, 91, 85, 90, 96, 95, 84, 95, 91, 83, 100, 96, 98, 89, 100, 100, 87, 91, 88, 94, 98, 84, 94, 99, 82, 87, 88, 89, 94, 81, 92, 89, 94, 88, 88, 100, 84, 96, 92, 98, 93, 92, 85, 87, 97, 90, 82, 89, 90, 85, 86, 91, 82, 95, 84, 80, 85, 84, 98, 89, 97, 100, 95, 83, 89, 83, 86, 89, 89, 100, 91, 95, 94, 98, 86, 87, 92, 85, 95, 83, 99, 86, 80, 81, 82, 82, 91, 95, 97, 95, 94, 81, 97, 98, 93, 89, 92, 94, 96, 96, 91, 92, 98, 93, 90, 83, 80, 92, 84, 89, 86, 92, 98, 96, 80, 80, 95, 89, 89, 87, 91, 99, 95, 91, 96, 96, 93, 81, 87, 92, 94, 92, 95, 96, 94, 81, 84, 98, 81, 84, 96, 86, 98, 98, 95, 90, 80, 83, 87, 91, 95, 90, 94, 95, 82, 95, 96, 94, 82, 99, 100, 81, 80, 97, 99, 89, 97, 98, 85, 98, 100, 85, 92, 100, 93, 97, 85, 81, 88, 91, 99, 85, 82, 95, 87, 82, 94, 85, 82, 88, 90, 98, 90, 93, 87, 99, 92, 95, 90, 93, 86, 81, 98, 95, 96, 97, 88, 96, 88, 96, 93, 82, 94, 82, 96, 95, 95, 100, 87, 86, 95, 95, 92, 99, 92, 96, 90, 87, 82, 100, 82, 88, 81, 81, 93, 90, 95, 90, 95, 93, 82, 85, 100, 83, 90, 83, 89, 87, 92, 100, 83, 82, 84, 96, 88, 89, 94, 96, 83, 89, 98, 89, 90, 83, 88, 85, 88, 81, 84, 96, 81, 91, 99, 89, 91, 87, 91, 81, 93, 84, 80, 92, 99, 83, 97, 97, 93, 91, 81, 99, 87, 94, 82, 95, 85, 93, 98, 82, 84, 95, 88, 98, 85, 85, 100, 83, 87, 83, 95, 86, 84, 88, 94, 91, 82, 89, 94, 100, 99, 86, 99, 81, 88, 94, 91, 82, 88, 98, 85, 91, 97, 80, 92, 81, 82, 89, 81, 91, 83, 100, 100, 84, 80, 92, 94, 89, 96, 100, 89, 92, 85, 88, 96, 87, 99, 84, 95, 88, 86, 92, 91, 96, 83, 87, 91, 89, 92, 90, 87, 96, 95, 83, 87, 84, 83, 81, 93, 95, 97, 89, 82, 90, 87, 94, 96, 98, 87, 93, 88, 94, 94, 89, 100, 88, 88, 96, 95, 99, 93, 85, 100, 87, 86, 96, 91, 92, 80, 90, 98, 91, 95, 90, 82, 97, 93, 91, 98, 85, 86, 84, 100, 99, 84, 91, 93, 90, 98, 89, 87, 92, 84, 90, 99, 85, 89, 98, 95, 84, 97, 86, 81, 92, 83, 95, 90, 94, 85, 98, 98, 96, 96, 88, 91, 82, 80, 92, 99, 84, 99, 94, 94, 83, 85, 80, 90, 92, 95, 98, 88, 91, 92, 81, 98, 84, 83, 88, 91, 94, 90, 82, 91, 86, 98, 89, 98, 82, 92, 95, 92, 91, 100, 97, 81, 99, 89, 93, 89, 88, 90, 91, 97, 89, 97, 89, 84, 94, 85, 83, 96, 98, 83, 90, 89, 81, 91, 84, 100, 94, 100, 82, 98, 86, 85, 80, 93, 90, 91, 96, 81, 94, 92, 93, 86, 83, 83, 98, 83, 86, 85, 100, 95, 100, 92, 89, 94, 100, 96, 83, 92, 92, 80, 86, 97, 89, 80, 89, 88, 90, 95, 82, 98, 97, 100, 85, 83, 93, 91, 83, 98, 90, 99, 91, 89, 94, 96, 97, 100, 100, 80, 98, 80, 85, 86, 87, 81, 89, 100, 96, 80, 94, 91, 88, 98, 80, 99, 86, 92, 85, 83, 92, 85, 94, 99, 97, 99, 90, 90, 90, 83, 95, 91, 92, 88, 86, 95, 98, 93, 83, 100, 92, 83, 83, 88, 97, 84, 86, 98, 84, 80, 96, 89, 82, 95, 85, 87, 94, 81, 88, 80, 99, 91, 97, 94, 99, 100, 94, 96, 86, 82, 99, 97, 90, 93, 100, 88, 87, 94, 86, 88, 98, 88, 81, 88, 97, 100, 89, 80, 99, 92, 85, 98, 94, 98, 90, 92, 81, 96, 94, 100, 92, 85, 90, 94, 85, 90, 97, 82, 85, 98, 80, 87, 97, 84, 98, 99, 97, 80, 97, 90, 96, 91, 82, 80, 84, 91, 92, 96, 81, 90, 96, 89, 82, 84, 100, 84, 80, 91, 85, 98, 88, 82, 97, 91, 97, 88, 83, 96, 80, 87, 80, 80, 83, 93, 98, 81, 98, 94, 96, 94, 89, 89, 80, 96, 94, 100, 84, 91, 84, 100, 95, 85, 81, 87, 97, 86, 90, 89, 80, 91, 89, 96, 90, 96, 92, 85, 83, 100, 86, 100, 99, 92, 82, 86, 81, 86, 81, 100, 81, 97, 85, 85, 90, 95, 92, 89, 93, 91, 82, 82, 99, 96, 99, 95, 94, 91, 84, 86, 93, 95, 80, 87, 99, 92, 86, 87, 91, 87, 88, 80, 88, 98, 95, 89, 97, 94, 100, 90, 94, 80, 82, 81, 95, 95, 91, 98, 90, 87, 99, 96, 84, 92, 99, 86, 91, 81, 98, 91, 91, 98, 84, 91, 100, 81, 98, 91, 96, 90, 96, 96, 100, 94, 90, 97, 95, 99, 95, 94, 96, 96, 84, 83, 100, 85, 97, 99, 93, 88, 85, 92, 81, 90, 92, 96, 97, 92, 84, 83, 96, 83, 89, 89, 94, 92, 85, 83, 83, 85, 95, 97, 85, 99, 91, 85, 96, 92, 88, 93, 90, 91, 96, 90, 87, 90, 86, 94, 89, 94, 87, 93, 97, 96, 93, 81, 89, 96, 96, 90, 88, 85, 93, 82, 96, 83, 95, 85, 94, 87, 98, 85, 99, 88, 82, 96, 98, 87, 94, 93, 80, 92, 84, 99, 93, 97, 96, 94, 91, 91, 93, 95, 89, 95, 94, 84, 93, 100, 100, 82, 85, 86, 95, 94, 91, 100, 92, 97, 99, 84, 88, 95, 80, 85, 88, 85, 85, 100, 85, 81, 89, 98, 87, 82, 86, 84, 95, 86, 80, 97, 90, 82, 84, 92, 100, 91, 93, 85, 91, 94, 86, 98, 90, 82, 96, 90, 100, 97, 96, 98, 88, 82, 95, 84, 100, 92, 80, 85, 97, 87, 84, 92, 84, 89, 88, 83, 84, 93, 83, 94, 88, 91, 85, 100, 97, 94, 94, 93, 82, 92, 92, 93, 80, 91, 82, 92, 81, 86, 93, 94, 92, 100, 90, 82, 99, 93, 99, 97, 86, 100, 94, 95, 94, 90, 96, 85, 95, 99, 87, 100, 88, 91, 88, 100, 81, 99, 97, 90, 97, 88, 96, 98, 80, 89, 93, 98, 90, 93, 91, 84, 84, 91, 83, 97, 86, 82, 82, 87, 96, 84, 81, 94, 87, 85, 99, 83, 89, 100, 81, 97, 98, 96, 99, 97, 87, 83, 90, 84, 87, 89, 87, 100, 99, 100, 85, 84, 84, 97, 87, 91, 81, 99, 93, 85, 97, 86, 94, 96, 89, 98, 99, 84, 88, 94, 90, 80, 90, 96, 97, 89, 85, 96, 96, 93, 80, 80, 94, 97, 83, 85, 90, 81, 86, 91, 89, 93, 100, 90, 99, 83, 97, 80, 88, 84, 96, 100, 99, 93, 86, 89, 93, 91, 88, 89, 93, 85, 98, 84, 82, 84, 99, 95, 94, 85, 96, 83, 92, 100, 92, 98, 82, 91, 99, 81, 94, 92, 84, 100, 80, 83, 91, 88, 85, 99, 92, 88, 90, 88, 94, 88, 95, 82, 89, 85, 95, 88, 99, 97, 89, 93, 84, 82, 85, 83, 82, 81, 98, 94, 92, 89, 87, 84, 93, 97, 86, 88, 100, 88, 91, 97, 90, 91, 100, 97, 92, 93, 94, 93, 92, 99, 89, 86, 81, 90, 97, 93, 87, 82, 94, 82, 100, 96, 90, 88, 85, 92, 86, 92, 89, 95, 86, 93, 92, 97, 86, 88, 99, 97, 100, 98, 88, 98, 81, 87, 94, 90, 96, 99, 91, 96, 90, 98, 92, 93, 97, 93, 88, 98, 100, 89, 80, 88, 100, 89, 95, 82, 93, 89, 95, 91, 90, 90, 88, 98, 81, 94, 86, 84, 96, 81, 80, 86, 96, 92, 84, 91, 98, 95, 89, 89, 90, 99, 100, 90, 93, 85, 88, 84, 92, 91, 90, 84, 84, 94, 94, 86, 80, 90, 81, 94, 97, 86, 94, 94, 92, 98, 88, 81, 84, 83, 81, 93, 85, 84, 86, 89, 82, 98, 90, 86, 88, 80, 87, 99, 96, 92, 80, 97, 81, 90, 98, 92, 81, 99, 82, 85, 88, 82, 88, 96, 99, 99, 86, 85, 94, 99, 92, 84, 97, 89, 98, 86, 91, 93, 100, 82, 95, 85, 92, 90, 100, 86, 80, 86, 93, 89, 80, 88, 83, 91, 97, 84, 81, 80, 89, 98, 88, 94, 81, 80, 97, 87, 94, 99, 85, 98, 96, 97, 87, 83, 82, 81, 85, 85, 91, 99, 85, 80, 97, 88, 94, 86, 85, 81, 94, 96, 86, 87, 91, 99, 96, 100, 89, 84, 89, 93, 96, 80, 100, 99, 88, 96, 89, 96, 99, 81, 94, 97, 89, 88, 96, 95, 82, 83, 89, 94, 95, 97, 90, 96, 90, 97, 81, 88, 97, 86, 97, 82, 84, 81, 88, 99, 99, 90, 97, 83, 98, 87, 86, 85, 92, 90, 99, 92, 98, 100, 80, 80, 94, 97, 95, 85, 94, 98, 92, 95, 95, 100, 84, 94, 85, 88, 88, 91, 99, 95, 83, 86, 88, 95, 99, 86, 98, 98, 95, 91, 92, 100, 92, 84, 95, 81, 81, 86, 96, 81, 81, 92, 100, 94, 80, 87, 93, 100, 92, 88, 97, 88, 94, 82, 98, 93, 97, 85, 88, 81, 92, 90, 92, 93, 97, 88, 84, 94, 97, 90, 80, 81, 96, 81, 92, 100, 93, 96, 85, 93, 91, 92, 100, 89, 97, 82, 96, 86, 91, 94, 82, 88, 98, 98, 85, 92, 100, 93, 80, 95, 92, 81, 98, 98, 98, 86, 93, 94, 90, 93, 86, 96, 84, 82, 83, 97, 86, 86, 81, 97, 89, 89, 84, 97, 83, 86, 81, 80, 94, 83, 93, 97, 86, 100, 100, 91, 86, 87, 82, 97, 86, 84, 96, 84, 95, 84, 96, 92, 90, 85, 91, 92, 92, 91, 87, 85, 89, 80, 90, 95, 94, 100, 83, 96, 99, 86, 82, 85, 97, 83, 99, 83, 93, 87, 100, 83, 93, 95, 80, 86, 82, 93, 94, 80, 100, 84, 81, 95, 81, 82, 88, 91, 85, 89, 94, 98, 82, 94, 96, 93, 86, 97, 94, 85, 95, 86, 96, 95, 81, 87, 83, 95, 100, 95, 91, 90, 96, 88, 80, 92, 89, 90, 95, 92, 93, 89, 97, 95, 85, 81, 95, 87, 100, 89, 100, 82, 92, 88, 90, 90, 89, 89, 93, 92, 85, 89, 87, 87, 85, 93, 100, 100, 88, 92, 81, 81, 92, 91, 94, 85, 91, 98, 97, 93, 94, 92, 89, 86, 83, 86, 92, 88, 85, 93, 97, 97, 94, 91, 89, 93, 88, 93, 97, 87, 90, 100, 98, 86, 93, 90, 98, 81, 93, 83, 85, 96, 90, 91, 82, 86, 81, 83, 82, 96, 83, 86, 82, 80, 86, 95, 93, 89, 85, 97, 99, 94, 97, 86, 97, 81, 100, 80, 99, 97, 90, 83, 98, 81, 83, 91, 89, 83, 85, 90, 100, 95, 88, 90, 95, 97, 87, 94, 95, 81, 83, 90, 90, 91, 96, 91, 86, 96, 82, 97, 95, 80, 81, 83, 97, 91, 93, 90, 88, 99, 84, 93, 96, 98, 84, 81, 84, 84, 83, 97, 83, 100, 92, 93, 89, 89, 88, 91, 86, 91, 92, 96, 95, 82, 96, 88, 88, 91, 95, 91, 100, 87, 81, 86, 93, 99, 96, 81, 89, 83, 96, 87, 83, 89, 97, 80, 92, 97, 93, 91, 89, 99, 97, 90, 94, 95, 99, 90, 85, 82, 89, 87, 93, 95, 86, 88, 89, 82, 87, 86, 99, 91, 91, 97, 99, 81, 88, 80, 94, 94, 84, 89, 84, 86, 88, 100, 82, 84, 91, 97, 96, 99, 96, 87, 95, 95, 92, 83, 86, 88, 92, 87, 84, 85, 96, 95, 82, 97, 83, 87, 82, 81, 87, 95



Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [99398, 90664, 95026, 93226, 99364, 94435, 93954, 94169, 92725, 96487, 99082, 98044, 94770, 97527, 92038, 90138, 99713, 96057, 95285, 92107, 92471, 90643, 95207, 94180, 99630, 91667, 90043, 96867, 99827, 98216, 94966, 96169, 94520, 99753, 96852, 91038, 92455, 90177, 98181, 95629, 95003, 94002, 92873, 91745, 94974, 90518, 96869, 98817, 98533, 91981, 92773, 99707, 98386, 96181, 90987, 90730, 96560, 92039, 99415, 93343, 96757, 99288, 90039, 93158, 99541, 99748, 93458, 99176, 98419, 98226, 91815, 92406, 91249, 95634, 96448, 98426, 99370, 95593, 99094, 92850, 96316, 98458, 94457, 92165, 99078, 93502, 97618, 94923, 97470, 90802, 91848, 99927, 91380, 99268, 91168, 98683, 91397, 96227, 97242, 99148, 95671, 96968, 92056, 96602, 94682, 99749, 96241, 95324, 96084, 92903, 97856, 91689, 93768, 95897, 97998, 95269, 98843, 95443, 97693, 99599, 95389, 91112, 95179, 98349, 90502, 92287, 93913, 95843, 96408, 99740, 99420, 93085, 92252, 90638, 97451, 91754, 94517, 95382, 96814, 99005, 97998, 98288, 97719, 95316, 93736, 91858, 90523, 96120, 96393, 96144, 90331, 95511, 91165, 90534, 90083, 96916, 99539, 95183, 98494, 91305, 93925, 93284, 99452, 98245, 93536, 93354, 96376, 98907, 97741, 92838, 98403, 92987, 98581, 90433, 95276, 93437, 91109, 94769, 94305, 93880, 98813, 91336, 95911, 93635, 91487, 97883, 93872, 94390, 94595, 90903, 92653, 90738, 92469, 92273, 96962, 94010, 92432, 95652, 98023, 95172, 93375, 96782, 96973, 97869, 90219, 90525, 98260, 97172, 95203, 90147, 94926, 93028, 98016, 91119, 93310, 99983, 99399, 92575, 96797, 96363, 97044, 94413, 97020, 96757, 98376, 97008, 96165, 91392, 92092, 93517, 95886, 94792, 99241, 91837, 96760, 93955, 95042, 94414, 97159, 93242, 94659, 99319, 91963, 99109, 99696, 95245, 99638, 92922, 97321, 96466, 90842, 94136, 90609, 91111, 92967, 99361, 96940, 97648, 92788, 95034, 91118, 99918, 93750, 92710, 91234, 90681, 95323, 96387, 98259, 97269, 99323, 90658, 94832, 90643, 92152, 96988, 94783, 90909, 92476, 92985, 92564, 98202, 91029, 96094, 90941, 97727, 92974, 98874, 96052, 91681, 93496, 97709, 91259, 98840, 94176, 90627, 95086, 94640, 91092, 92766, 93986, 90736, 95577, 99915, 97688, 93230, 95068, 91601, 93402, 93020, 94609, 95186, 95348, 90066, 99210, 91586, 97700, 95739, 93491, 91381, 92347, 93893, 97817, 97326, 97628, 91818, 99484, 95574, 90635, 96788, 93419, 93280, 93575, 92599, 99335, 94676, 94190, 93160, 91295, 91204, 91324, 96995, 91266, 93835, 99320, 97318, 90372, 97299, 99139, 97274, 90297, 96672, 99843, 98842, 92562, 96433, 91394, 96969, 95244, 90971, 98593, 97536, 95124, 93334, 96444, 98934, 98206, 95964, 99197, 92210, 93103, 93133, 98924, 94037, 99855, 99852, 94574, 90047, 91431, 96136, 99176, 93523, 96361, 98677, 91087, 95826, 98751, 94212, 94998, 90528, 96262, 90190, 99812, 92736, 97545, 98673, 93409, 98770, 98111, 98853, 98854, 99067, 97619, 92046, 92632, 98918, 92199, 90583, 93163, 97514, 92533, 98593, 96981, 95644, 92204, 98407, 90793, 96353, 91038, 90987, 99852, 90876, 95062, 92628, 97052, 94267, 98087, 93014, 92514, 91249, 99888, 91653, 90482, 93055, 92503, 90684, 98894, 90265, 99271, 92112, 97120, 94994, 90855, 96636, 99054, 98174, 98764, 99397, 91990, 94115, 99632, 95226, 96546, 95080, 92877, 92262, 99250, 93141, 90271, 98167, 97358, 95279, 98410, 97605, 94975, 90351, 94121, 93115, 90620, 93340, 98434, 94077, 98979, 93130, 96899, 90078, 93802, 94934, 92750, 95640, 94659, 97458, 94722, 93040, 97554, 97920, 93132, 98719, 98287, 95090, 96281, 96667, 97928, 91696, 94192, 99066, 91691, 92709, 98218, 90491, 96147, 95326, 93175, 96984, 94783, 99772, 93294, 95455, 98624, 97439, 94511, 92029, 96882, 94348, 93405, 90184, 92434, 93425, 97433, 90837, 98254, 98669, 92015, 96895, 93930, 97922, 97503, 94200, 95842, 98679, 93092, 99301, 90686, 93109, 95339, 92022, 99613, 94325, 96095, 97405, 99488, 95807, 98389, 97297, 98478, 99849, 99100, 96565, 95542, 98909, 94052, 92735, 97222, 95844, 94635, 90714, 90615, 95122, 94979, 96168, 98392, 97329, 95271, 92118, 90284, 93559, 99871, 93376, 95598, 94593, 98579, 92543, 93013, 92165, 95591, 99455, 97150, 96087, 93484, 93237, 96230, 91497, 98914, 92369, 91506, 95096, 92610, 93588, 97112, 97862, 98733, 94817, 98444, 94463, 97682, 90853, 98274, 96318, 92047, 93045, 92432, 96128, 97549, 95839, 91046, 96558, 99540, 93733, 97126, 94727, 90905, 91907, 91551, 97166, 99081, 92605, 92438, 97008, 98272, 97210, 97259, 96268, 97966, 90869, 98135, 91345, 90328, 92511, 94234, 99080, 97213, 98150, 90399, 94074, 92127, 99494, 97747, 95359, 93741, 93019, 90300, 91936, 95312, 96938, 91469, 92273, 98741, 94778, 95629, 92369, 92862, 94634, 92931, 90686, 93078, 92612, 90029, 95919, 93460, 97435, 95439, 95373, 93021, 90756, 95882, 97512, 95057, 94319, 99163, 92173, 92143, 90796, 99879, 95863, 99679, 99846, 96561, 97590, 97695, 94758, 92741, 92765, 94074, 97897, 99868, 98836, 92282, 95087, 97010, 96527, 93253, 90066, 90818, 94845, 94166, 90180, 99386, 96305, 96501, 93609, 95313, 91251, 92001, 96587, 96522, 96601, 97924, 96307, 98221, 94836, 92340, 91515, 95751, 93675, 96113, 98146, 96012, 95473, 90713, 91779, 94673, 98133, 99978, 92190, 97408, 96048, 99619, 97810, 96054, 90446, 90340, 99522, 94766, 93393, 99232, 93887, 96982, 98663, 99339, 95654, 91368, 95714, 99157, 98184, 93722, 90067, 92237, 98270, 92330, 94545, 92038, 98806, 96216, 91042, 98676, 98690, 99309, 91717, 92368, 94419, 98685, 91905, 92972, 91956, 91720, 94359, 96283, 90609, 95253, 95952, 95509, 92886, 99648, 93439, 90698, 95625, 92067, 94494, 99809, 98019, 96148, 93852, 92572, 91611, 99836, 92121, 92333, 95803, 99141, 96556, 91651, 99974, 93248, 98968, 94610, 99925, 95587, 95777, 92488, 92021, 96206, 99230, 99738, 93163, 93141, 96776, 94073, 98496, 94319, 97691, 97842, 91640, 96979, 92202, 97885, 94147, 98617, 98520, 97552, 91864, 91995, 97522, 97694, 95959, 96908, 93090, 93083, 95435, 93066, 98549, 96930, 96184, 91737, 96089, 98973, 98810, 98567, 96567, 91933, 93808, 96399, 91669, 97053, 97997, 94856, 99068, 91914, 90568, 92928, 93892, 92728, 90565, 91895, 96605, 98947, 90182, 98532, 98237, 90133, 99866, 92727, 98763, 93805, 91895, 99409, 93424, 98226, 98823, 91988, 94772, 95959, 91995, 93382, 95311, 92409, 93198, 91158, 96754, 98576, 99421, 95310, 97114, 98724, 96703, 90745, 96115, 91820, 94094, 91719, 92732, 90213, 92841, 92094, 96098, 90279, 99122, 93592, 92401, 97501, 90864, 94016, 95997, 92849, 90480, 98763, 92466, 98177, 95730, 91944, 95042, 95880, 90332, 97871, 93511, 92040, 94434, 99789, 96462, 92918, 92603, 90307, 93603, 91789, 93610, 97217, 94733, 96853, 91946, 99107, 95929, 91215, 95769, 97516, 91528, 92801, 99732, 96231, 92551, 95469, 94074, 93780, 98360, 92533, 93198, 92182, 98568, 90489, 98023, 93566, 96441, 93780, 96386, 96397, 93425, 91136, 94922, 94760, 96756, 90223, 94003, 97368, 98629, 90121, 94546, 97814, 95865, 90504, 91839, 93929, 93636, 92297, 96842, 92071, 95434, 97060, 99875, 91663, 94161, 91374, 95097, 96362, 96017, 98114, 96704, 90868, 99668, 98637, 99408, 96577, 98073, 98641, 96416, 95026, 99310, 95737, 97879, 95397, 95755, 98620, 91568, 91225, 98053, 96118, 95400, 91890, 91449, 99406, 98368, 96480, 97271, 92156, 92397, 91170, 91602, 91534, 92719, 96396, 96543, 97585, 98448, 96794, 96813, 99776, 98243, 95110, 95931, 97265, 98131, 91123, 91724, 93771, 99927, 97980, 90479, 98882, 98992, 91310, 92707, 95054, 99520, 90937, 91207, 93633, 94032, 91138, 93845, 93795, 91306, 92968, 99346, 95476, 93561, 91386, 94238, 91077, 99411, 90672, 93080, 91015, 93841, 93924, 92114, 95030, 90237, 96317, 98539, 94584, 92375, 97230, 93783, 91634, 96201, 93366, 99326, 95610, 92226, 93533, 97912, 93529, 99370, 95906, 91306, 97814, 90269, 90262, 98152, 92633, 96157, 90925, 91940, 92331, 96733, 91012, 99611, 94899, 96690, 94883, 95902, 99310, 95935, 93710, 97187, 98033, 95001, 98524, 91255, 95076, 90574, 96187, 96269, 95484, 98656, 96379, 92928, 94406, 94483, 91838, 98810, 92533, 98967, 99891, 92761, 90014, 91213, 90581, 90281, 92805, 95414, 95622, 97873, 93788, 98325, 92799, 95518, 96011, 90414, 92482, 91611, 96875, 99793, 96460, 93966, 90259, 93069, 94422, 93842, 98163, 91377, 90126, 97322, 94732, 93018, 97538, 99831, 93247, 96370, 97018, 95104, 91077, 98041, 93042, 99490, 98436, 91584, 97862, 96127, 94305, 91531, 90020, 91220, 96883, 95973, 92690, 96419, 96538, 98482, 94455, 97143, 96396, 96763, 94307, 96566, 99406, 91112, 93430, 98947, 91015, 90483, 98602, 94005, 93440, 97768, 95979, 96121, 90909, 98768, 99415, 98271, 95248, 91229, 94516, 90841, 97678, 91331, 98149, 99697, 95830, 95058, 93299, 96246, 94618, 90972, 90813, 94594, 95819, 99123, 92860, 97382, 94034, 98019, 97712, 92390, 95995, 97924, 91868, 96559, 96151, 94075, 93455, 92772, 93874, 97859, 90343, 97383, 96716, 97460, 97499, 93300, 99704, 92057, 90694, 94222, 92840, 95227, 97909, 90538, 97682, 93928, 95502, 96364, 99170, 99137, 93531, 90175, 90712, 93033, 93509, 98618, 98942, 95474, 92283, 94177, 99534, 99437, 97759, 92629, 97006, 91084, 95748, 95446, 99524, 95158, 92319, 95649, 94373, 90523, 92771, 93024, 91011, 93854, 96546, 96036, 96366, 91688, 97255, 93324, 91410, 92378, 98337, 97227, 98947, 99829, 97844, 95415, 90004, 90334, 90300, 94455, 90282, 92308, 99701, 90851, 98686, 96265, 95304, 90958, 97123, 99001, 91066, 91074, 94495, 91612, 90347, 92935, 98065, 95719, 99791, 97879, 92247, 96067, 90185, 95027, 98264, 90529, 97549, 94955, 98098, 90464, 94672, 90552, 92677, 95370, 91922, 91015, 97357, 95830, 96254, 93275, 97394, 97829, 99035, 97519, 92353, 99740, 96563, 99961, 91134, 90472, 91967, 96494, 98704, 93595, 93556, 95469, 91476, 97613, 92611, 96466, 90781, 96971, 93145, 94643, 92897, 91894, 97180, 97006, 99705, 97660, 91760, 97771, 96184, 95574, 98067, 94904, 99695, 98540, 98797, 98844, 91287, 93890, 97238, 97468, 91075, 94913, 90387, 98404, 98195, 90397, 98870, 90971, 90775, 98426, 98445, 95210, 92895, 96641, 91414, 94738, 93644, 96237, 91424, 93505, 97983, 91083, 91787, 93896, 90387, 96520, 95745, 95119, 90009, 94617, 96887, 96279, 90449, 93986, 99321, 98184, 98117, 92602, 90127, 91510, 90676, 91509, 91145, 96708, 91045, 95762, 93180, 92761, 93063, 96528, 93370, 97770, 92075, 94858, 95629, 94198, 97407, 93331, 94833, 95594, 93982, 96498, 97733, 99618, 97199, 94863, 97469, 94257, 98563, 99981, 93972, 90297, 99563, 90201, 99561, 93291, 97815, 97549, 97609, 92539,


Compiler Message
Runtime Error
Error (stderr)
Exception in thread "main" java.lang.StackOverflowError
	at Result.dfs(Solution.java:53)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs(Solution.java:60)
	at Result.dfs{-truncated-}
Your Output (stdout)
~ no response on stdout ~
Debug output
arr = [63674, 55705, 58985, 75116, 51746, 80073, 15135, 41001, 99327, 52397, 69393, 23314, 76, 31706, 45026, 69764, 23626, 73740, 29035, 10440, 85360, 38291, 31249, 73066, 942, 37206, 14001, 22444, 81375, 33772, 30866, 39705, 49913, 30438, 21224, 78616, 78193, 23775, 56346, 23351, 45754, 63045, 22242, 24997, 24443, 21923, 54695, 12512, 77184, 81678, 12705, 57942, 39242, 28516, 87979, 25383, 19304, 87803, 186, 48558, 17600, 53528, 20321, 62781, 8750, 22654, 97887, 63693, 78152, 10872, 41457, 77370, 32454, 8810, 16809, 4195, 27027, 35897, 81919, 42389, 66332, 62837, 73973, 6148, 36694, 3052, 99931, 28057, 25240, 18471, 59258, 75767, 63604, 45687, 45093, 18898, 10512, 24772, 28450, 53688, 53459, 4934, 28934, 30156, 66422, 8721, 15065, 29318, 7946, 59625, 57401, 6520, 81886, 16699, 78533, 50980, 11743, 14203, 5381, 11361, 98739, 74313, 31321, 2542, 43650, 46568, 38319, 39674, 12917, 29006, 12564, 42230, 20648, 42826, 11012, 12939, 79865, 64931, 799, 24335, 48739, 70883, 98669, 39106, 60501, 4506, 83359, 49519, 79374, 69845, 40296, 45891, 69073, 36138, 25029, 14414, 95311, 57165, 99499, 20605, 9222, 32545, 3515, 56222, 74723, 80508, 72782, 14704, 9594, 49141, 4331, 13023, 7391, 66273, 408, 96280, 95319, 16936, 92663, 45490, 61801, 41725, 59911, 58672, 56689, 69395, 4795, 90712, 26986, 32702, 47335, 18428, 1361, 67725, 26679, 43831, 77925, 63842, 76272, 60797, 1417, 14027, 52218, 88198, 38345, 13278, 49791, 15973, 71609, 66779, 38848, 19749, 39735, 98764, 85317, 74274, 40107, 98093, 2994, 36300, 420, 97183, 97554, 73485, 98098, 57208, 22978, 87476, 73505, 24385, 69528, 16542, 39537, 29663, 41957, 5958, 37529, 27310, 66811, 2779, 27411, 6613, 88470, 65774, 28657, 65358, 75036, 80928, 47811, 3730, 57175, 38319, 38226, 82941, 65749, 57087, 38164, 94157, 17341, 41816, 24487, 192, 20696, 15853, 943, 44951, 41698, 4918, 12370, 73761, 69614, 37816, 39185, 71478, 73195, 90152, 80082, 4674, 21610, 21634, 75143, 49216, 72263, 47919, 56400, 95191, 95204, 43875, 38406, 47411, 12157, 96739, 77447, 81621, 77108, 14846, 34806, 74043, 14947, 50450, 76814, 95056, 64831, 13590, 32451, 46556, 45750, 38067, 7834, 26959, 73179, 10279, 26202, 27803, 7772, 87003, 21846, 1578, 9728, 9186, 66931, 91661, 5734, 65348, 51274, 82130, 49357, 70456, 66875, 7770, 70273, 3922, 71351, 62700, 62909, 93859, 17438, 59842, 60888, 43791, 39312, 22831, 80062, 72747, 80736, 37005, 90006, 79963, 34891, 46732, 91489, 51414, 41248, 62625, 35756, 96953, 50944, 34076, 20386, 44047, 28869, 50064, 36019, 16934, 8026, 54333, 18445, 98493, 49722, 99822, 81339, 6168, 91760, 21589, 66343, 13036, 86034, 77530, 49270, 10417, 36807, 91814, 83844, 39374, 51415, 37227, 47740, 15055, 6287, 9522, 79565, 30025, 12873, 79386, 60003, 50559, 40467, 55776, 95514, 13344, 15880, 58149, 8769, 89104, 73538, 74507, 26451, 4366, 73825, 77201, 82075, 2950, 42329, 79070, 19172, 84666, 8184, 38767, 88492, 80338, 35761, 66030, 81775, 9454, 50733, 35155, 34231, 19577, 58898, 88088, 58006, 25102, 44124, 97318, 39739, 47056, 10392, 63138, 46741, 5297, 2169, 39885, 38346, 29851, 97176, 21382, 71706, 39038, 16143, 67104, 24564, 78654, 35216, 17469, 31491, 28669, 18448, 29166, 44600, 61719, 10162, 59610, 84954, 81163, 39953, 43342, 46659, 75522, 96720, 32615, 52076, 840, 22354, 19415, 33629, 42850, 60570, 16814, 35363, 16748, 71862, 53826, 85715, 34017, 91666, 29811, 91863, 2886, 65567, 82023, 45606, 31901, 42740, 43021, 10870, 74489, 46796, 3430, 83747, 86523, 71846, 49951, 77412, 68571, 70790, 18520, 86297, 29858, 12756, 88171, 26581, 41931, 87038, 42428, 33361, 46582, 22059, 41934, 18796, 44818, 69584, 84561, 60052, 21463, 76769, 77385, 91073, 53474, 31654, 8656, 17985, 9100, 21284, 87338, 64378, 69744, 85903, 12748, 79761, 96706, 87520, 47543, 12145, 20956, 36638, 93488, 54039, 55643, 37048, 11421, 20037, 18287, 15330, 84273, 3755, 2410, 99064, 95205, 92024, 56808, 95746, 81645, 85076, 14795, 3014, 30451, 82856, 65403, 50027, 99394, 49669, 73881, 29708, 85856, 62023, 39795, 32045, 14841, 77858, 27613, 29756, 85363, 39252, 16841, 99370, 96737, 35250, 96646, 83136, 74473, 6655, 73335, 10156, 29240, 70402, 68143, 98747, 11747, 77568, 57500, 56304, 71424, 96121, 48264, 77751, 87429, 27196, 86385, 19203, 16758, 21962, 69021, 89548, 96159, 65111, 67361, 59394, 42037, 30502, 70216, 34211, 15718, 94704, 26922, 76472, 60182, 14981, 2158, 90197, 68766, 39652, 55000, 575, 16399, 20874, 19872, 71177, 69517, 42492, 97988, 1760, 92120, 58981, 64491, 40804, 82315, 65369, 58678, 28616, 6194, 82609, 52541, 59251, 44061, 48048, 86320, 12437, 27784, 46421, 18824, 60348, 27432, 3250, 65004, 98275, 40406, 89544, 83593, 83135, 46866, 54416, 33558, 89211, 21592, 10494, 39737, 6680, 34249, 45948, 95187, 15167, 27592, 26512, 80661, 61973, 36263, 81029, 28, 62589, 97608, 34884, 14581, 19725, 10355, 67086, 8855, 26328, 16980, 18821, 35925, 77914, 21266, 73985, 71105, 70048, 3801, 65480, 49548, 97889, 65085, 35019, 75459, 6488, 8398, 88698, 68467, 62868, 72774, 45792, 56154, 33906, 40141, 74034, 30815, 57666, 70126, 41049, 63253, 90041, 61029, 88671, 6714, 93464, 96094, 54554, 30052, 9899, 10513, 23780, 90777, 26458, 6461, 92086, 95853, 98724, 50994, 61913, 945, 44220, 14791, 72616, 67281, 56453, 48470, 87001, 29346, 18585, 47628, 17775, 26371, 14997, 27764, 79541, 15894, 48909, 15874, 94657, 18607, 74674, 66805, 64552, 40332, 44508, 29325, 42063, 79132, 51123, 19399, 4862, 53411, 20128, 6301, 35243, 80329, 69024, 80957, 57335, 92912, 3249, 55327, 69230, 8966, 63955, 36620, 34574, 55223, 77075, 30820, 65830, 6118, 78713, 56243, 39727, 18160, 8018, 89739, 34362, 28075, 65426, 25697, 66923, 35750, 31523, 1135, 41214, 11419, 29787, 28918, 84963, 50666, 95042, 85578, 68291, 50490, 78738, 20184, 46809, 95022, 82004, 86394, 65448, 20444, 57925, 51060, 92468, 75236, 65596, 99677, 26973, 4090, 90262, 41461, 37848, 61655, 66190, 15019, 47198, 5735, 51931, 9293, 67148, 28657, 11239, 43924, 35329, 60210, 47132, 98122, 71388, 15916, 21478, 37849, 94558, 70311, 67937, 67326, 627, 6554, 72249, 22826, 95541, 30827, 50547, 34180, 22474, 42864, 3783, 2624, 99324, 22388, 64306, 82329, 4444, 25318, 79269, 7399, 9790, 83315, 94778, 76104, 62768, 65566, 14531, 89786, 60708, 92681, 7236, 45130, 45200, 89114, 28149, 95390, 67458, 22791, 1872, 28684, 40428, 8399, 85851, 59618, 98517, 44280, 97071, 94249, 31655, 11962, 37993, 7825, 46777, 92030, 2067, 69726, 36926, 40415, 73977, 60703, 5779, 25112, 65314, 53751, 3785, 44909, 42410, 71886, 80936, 38959, 9901, 93571, 50835, 48805, 10852, 49716, 90825, 12967, 92339, 44933, 73787, 58261, 63968, 40117, 38633, 1733, 46036, 53443, 58561, 92420, 63926, 72544, 58820, 3122, 95813, 21837, 69039, 28914, 21850, 95951, 69092, 61387, 54768, 52631, 2026, 85387, 54174, 56730, 82754, 88521, 39818, 80591, 27013, 82741, 22716, 95579, 61522, 12065, 67261, 34489, 53311, 60793, 82301, 65251, 13878, 82554, 14671, 92579, 92138, 42076, 84764, 96134, 69034, 98828, 60465, 21273, 6243, 64451, 13158, 61620, 81599, 34395, 37459, 11439, 64624, 28265, 44997, 20210, 47012, 73044, 61752, 51803, 44949, 28740, 68361, 36316, 32828, 86936, 23263, 3888, 51229, 69299, 99692, 6706, 55936, 15346, 49243, 67951, 39346, 76535, 77111, 44547, 60777, 27284, 77098, 54376, 67988, 62526, 28076, 98001, 78656, 76180, 97848, 99960, 17598, 5198, 35220, 5331, 73211, 79847, 56548, 93568, 44889, 42437, 49193, 13455, 2124, 83923, 21003, 589, 65521, 659, 22333, 11920, 50157, 91992, 55104, 657, 82507, 3533, 61994, 59238, 13575, 70585, 58111, 78090, 2937, 31572, 27365, 3537, 41059, 62281, 56213, 29497, 10584, 28275, 18608, 24489, 61161, 65081, 57691, 78007, 86988, 73551, 32130, 48452, 51394, 61290, 8019, 8574, 98573, 70100, 80836, 13800, 29040, 4089, 6221, 63809, 92402, 13477, 3179, 88378, 68733, 95005, 68818, 64797, 68124, 41526, 9834, 66034, 76920, 10486, 52693, 46347, 18707, 83894, 41837, 94203, 78262, 60787, 73206, 21125, 57528, 57331, 39003, 9463, 94053, 89353, 78868, 12141, 74402, 77473, 42453, 83047, 17751, 45929, 68939, 18014, 88119, 82811, 80090, 3241, 17678, 91570, 65231, 497, 88083, 91560, 8838, 46640, 21981, 18783, 74490, 8697, 82617, 37114, 12479, 15200, 65929, 94981, 2652, 79448, 96518, 52804, 78917, 41043, 6620, 62466, 7314, 78292, 85439, 1655, 5693, 85979, 35186, 53139, 99753, 70523, 59678, 71852, 7582, 87681, 41555, 1143, 32809, 36735, 34949, 83607, 25100, 29478, 11880, 61633, 35971, 72350, 52717, 78138, 57747, 35717, 63674, 68894, 83988, 35548, 37670, 84469, 70818, 19641, 48759, 91987, 10332, 33084, 84912, 84737, 49606, 35747, 79102, 71151, 1850, 58423, 94449, 23721, 99827, 13566, 55596, 43141, 35921, 21657, 95551, 33303, 18095, 74826, 4896, 88722, 46456, 35650, 28569, 67542, 81278, 60945, 54358, 60510, 30061, 47869, 76776, 69087, 28555, 22817, 183, 74381, 28702, 32356, 65821, 12619, 35013, 49830, 48826, 72620, 50188, 81291, 73374, 96027, 602, 40079, 36759, 92051, 12807, 60590, 16524, 75027, 3284, 38729, 58667, 95320, 25442, 19014, 9533, 61920, 90198, 96472, 59139, 48553, 39493, 65219, 9501, 34194, 5674, 25033, 67960, 53581, 33942, 52212, 92538, 23674, 79921, 51694, 84055, 67940, 19872, 33664, 28008, 81932, 27222, 99761, 38177, 70857, 75786, 81536, 43430, 42634, 27449, 46951, 89418, 58404, 50040, 79460, 97615, 26562, 89754, 38643, 35613, 76045, 91733, 31344, 4610, 59986, 22234, 57945, 42723, 21767, 96365, 49643, 76040, 2104, 56416, 79530, 23272, 78003, 77605, 12750, 74404, 2246, 389, 59200, 18912, 55545, 1490, 5968, 94936, 32552, 19403, 36125, 67206, 57658, 44384, 85504, 18574, 66817, 67773, 49712, 57689, 97592, 61028, 29951, 3636, 1223, 20904, 98054, 7306, 27693, 74009, 68701, 8786, 37633, 81282, 89923, 10286, 63326, 20968, 1746, 64843, 75189, 57239, 67249, 42547, 9802, 20887, 50321, 38035, 80875, 38340, 34, 25690, 25523, 45778, 2841, 52275, 34784, 16204, 80677, 80686, 79534, 9096, 45588, 63012, 70768, 24597, 69633, 26310, 86701, 7217, 92591, 272, 58188, 97620, 69385, 2414, 28708, 75297, 54169, 23435, 95457, 69825, 28661, 23112, 94075, 43848, 8572, 55346, 11092, 67082, 3873, 89957, 95411, 7350, 66190, 88328, 92959, 62025, 29702, 20192, 47091, 41248, 40767, 79683, 91438, 92914, 75807, 70138, 11570, 28628, 67088, 79252, 67191, 69727, 91601, 58818, 47538, 82934, 29580, 56611, 79243, 16325, 66043, 21882, 18106, 78037, 91289, 20495, 34085, 22502, 54412, 50910, 42244, 21980, 


Input (stdin)

Run as Custom Input
|
Download
6
5
3
2
4
1
2
Your Output (stdout)
4
5
Expected Output

Download
4
5
Debug output
arr = [5, 3, 2, 4, 1, 2]


-----------
fail 13
Your Output (stdout)
100000
Debug output
arr = [99398, 90664, 95026, 93226, 99364, 94435, 93954, 94169, 92725, 96487, 99082, 98044, 94770, 97527, 92038, 90138, 99713, 96057, 95285, 92107, 92471, 90643, 95207, 94180, 99630, 91667, 90043, 96867, 99827, 98216, 94966, 96169, 94520, 99753, 96852, 91038, 92455, 90177, 98181, 95629, 95003, 94002, 92873, 91745, 94974, 90518, 96869, 98817, 98533, 91981, 92773, 99707, 98386, 96181, 90987, 90730, 96560, 92039, 99415, 93343, 96757, 99288, 90039, 93158, 99541, 99748, 93458, 99176, 98419, 98226, 91815, 92406, 91249, 95634, 96448, 98426, 99370, 95593, 99094, 92850, 96316, 98458, 94457, 92165, 99078, 93502, 97618, 94923, 97470, 90802, 91848, 99927, 91380, 99268, 91168, 98683, 91397, 96227, 97242, 99148, 95671, 96968, 92056, 96602, 94682, 99749, 96241, 95324, 96084, 92903, 97856, 91689, 93768, 95897, 97998, 95269, 98843, 95443, 97693, 99599, 95389, 91112, 95179, 98349, 90502, 92287, 93913, 95843, 96408, 99740, 99420, 93085, 92252, 90638, 97451, 91754, 94517, 95382, 96814, 99005, 97998, 98288, 97719, 95316, 93736, 91858, 90523, 96120, 96393, 96144, 90331, 95511, 91165, 90534, 90083, 96916, 99539, 95183, 98494, 91305, 93925, 93284, 99452, 98245, 93536, 93354, 96376, 98907, 97741, 92838, 98403, 92987, 98581, 90433, 95276, 93437, 91109, 94769, 94305, 93880, 98813, 91336, 95911, 93635, 91487, 97883, 93872, 94390, 94595, 90903, 92653, 90738, 92469, 92273, 96962, 94010, 92432, 95652, 98023, 95172, 93375, 96782, 96973, 97869, 90219, 90525, 98260, 97172, 95203, 90147, 94926, 93028, 98016, 91119, 93310, 99983, 99399, 92575, 96797, 96363, 97044, 94413, 97020, 96757, 98376, 97008, 96165, 91392, 92092, 93517, 95886, 94792, 99241, 91837, 96760, 93955, 95042, 94414, 97159, 93242, 94659, 99319, 91963, 99109, 99696, 95245, 99638, 92922, 97321, 96466, 90842, 94136, 90609, 91111, 92967, 99361, 96940, 97648, 92788, 95034, 91118, 99918, 93750, 92710, 91234, 90681, 95323, 96387, 98259, 97269, 99323, 90658, 94832, 90643, 92152, 96988, 94783, 90909, 92476, 92985, 92564, 98202, 91029, 96094, 90941, 97727, 92974, 98874, 96052, 91681, 93496, 97709, 91259, 98840, 94176, 90627, 95086, 94640, 91092, 92766, 93986, 90736, 95577, 99915, 97688, 93230, 95068, 91601, 93402, 93020, 94609, 95186, 95348, 90066, 99210, 91586, 97700, 95739, 93491, 91381, 92347, 93893, 97817, 97326, 97628, 91818, 99484, 95574, 90635, 96788, 93419, 93280, 93575, 92599, 99335, 94676, 94190, 93160, 91295, 91204, 91324, 96995, 91266, 93835, 99320, 97318, 90372, 97299, 99139, 97274, 90297, 96672, 99843, 98842, 92562, 96433, 91394, 96969, 95244, 90971, 98593, 97536, 95124, 93334, 96444, 98934, 98206, 95964, 99197, 92210, 93103, 93133, 98924, 94037, 99855, 99852, 94574, 90047, 91431, 96136, 99176, 93523, 96361, 98677, 91087, 95826, 98751, 94212, 94998, 90528, 96262, 90190, 99812, 92736, 97545, 98673, 93409, 98770, 98111, 98853, 98854, 99067, 97619, 92046, 92632, 98918, 92199, 90583, 93163, 97514, 92533, 98593, 96981, 95644, 92204, 98407, 90793, 96353, 91038, 90987, 99852, 90876, 95062, 92628, 97052, 94267, 98087, 93014, 92514, 91249, 99888, 91653, 90482, 93055, 92503, 90684, 98894, 90265, 99271, 92112, 97120, 94994, 90855, 96636, 99054, 98174, 98764, 99397, 91990, 94115, 99632, 95226, 96546, 95080, 92877, 92262, 99250, 93141, 90271, 98167, 97358, 95279, 98410, 97605, 94975, 90351, 94121, 93115, 90620, 93340, 98434, 94077, 98979, 93130, 96899, 90078, 93802, 94934, 92750, 95640, 94659, 97458, 94722, 93040, 97554, 97920, 93132, 98719, 98287, 95090, 96281, 96667, 97928, 91696, 94192, 99066, 91691, 92709, 98218, 90491, 96147, 95326, 93175, 96984, 94783, 99772, 93294, 95455, 98624, 97439, 94511, 92029, 96882, 94348, 93405, 90184, 92434, 93425, 97433, 90837, 98254, 98669, 92015, 96895, 93930, 97922, 97503, 94200, 95842, 98679, 93092, 99301, 90686, 93109, 95339, 92022, 99613, 94325, 96095, 97405, 99488, 95807, 98389, 97297, 98478, 99849, 99100, 96565, 95542, 98909, 94052, 92735, 97222, 95844, 94635, 90714, 90615, 95122, 94979, 96168, 98392, 97329, 95271, 92118, 90284, 93559, 99871, 93376, 95598, 94593, 98579, 92543, 93013, 92165, 95591, 99455, 97150, 96087, 93484, 93237, 96230, 91497, 98914, 92369, 91506, 95096, 92610, 93588, 97112, 97862, 98733, 94817, 98444, 94463, 97682, 90853, 98274, 96318, 92047, 93045, 92432, 96128, 97549, 95839, 91046, 96558, 99540, 93733, 97126, 94727, 90905, 91907, 91551, 97166, 99081, 92605, 92438, 97008, 98272, 97210, 97259, 96268, 97966, 90869, 98135, 91345, 90328, 92511, 94234, 99080, 97213, 98150, 90399, 94074, 92127, 99494, 97747, 95359, 93741, 93019, 90300, 91936, 95312, 96938, 91469, 92273, 98741, 94778, 95629, 92369, 92862, 94634, 92931, 90686, 93078, 92612, 90029, 95919, 93460, 97435, 95439, 95373, 93021, 90756, 95882, 97512, 95057, 94319, 99163, 92173, 92143, 90796, 99879, 95863, 99679, 99846, 96561, 97590, 97695, 94758, 92741, 92765, 94074, 97897, 99868, 98836, 92282, 95087, 97010, 96527, 93253, 90066, 90818, 94845, 94166, 90180, 99386, 96305, 96501, 93609, 95313, 91251, 92001, 96587, 96522, 96601, 97924, 96307, 98221, 94836, 92340, 91515, 95751, 93675, 96113, 98146, 96012, 95473, 90713, 91779, 94673, 98133, 99978, 92190, 97408, 96048, 99619, 97810, 96054, 90446, 90340, 99522, 94766, 93393, 99232, 93887, 96982, 98663, 99339, 95654, 91368, 95714, 99157, 98184, 93722, 90067, 92237, 98270, 92330, 94545, 92038, 98806, 96216, 91042, 98676, 98690, 99309, 91717, 92368, 94419, 98685, 91905, 92972, 91956, 91720, 94359, 96283, 90609, 95253, 95952, 95509, 92886, 99648, 93439, 90698, 95625, 92067, 94494, 99809, 98019, 96148, 93852, 92572, 91611, 99836, 92121, 92333, 95803, 99141, 96556, 91651, 99974, 93248, 98968, 94610, 99925, 95587, 95777, 92488, 92021, 96206, 99230, 99738, 93163, 93141, 96776, 94073, 98496, 94319, 97691, 97842, 91640, 96979, 92202, 97885, 94147, 98617, 98520, 97552, 91864, 91995, 97522, 97694, 95959, 96908, 93090, 93083, 95435, 93066, 98549, 96930, 96184, 91737, 96089, 98973, 98810, 98567, 96567, 91933, 93808, 96399, 91669, 97053, 97997, 94856, 99068, 91914, 90568, 92928, 93892, 92728, 90565, 91895, 96605, 98947, 90182, 98532, 98237, 90133, 99866, 92727, 98763, 93805, 91895, 99409, 93424, 98226, 98823, 91988, 94772, 95959, 91995, 93382, 95311, 92409, 93198, 91158, 96754, 98576, 99421, 95310, 97114, 98724, 96703, 90745, 96115, 91820, 94094, 91719, 92732, 90213, 92841, 92094, 96098, 90279, 99122, 93592, 92401, 97501, 90864, 94016, 95997, 92849, 90480, 98763, 92466, 98177, 95730, 91944, 95042, 95880, 90332, 97871, 93511, 92040, 94434, 99789, 96462, 92918, 92603, 90307, 93603, 91789, 93610, 97217, 94733, 96853, 91946, 99107, 95929, 91215, 95769, 97516, 91528, 92801, 99732, 96231, 92551, 95469, 94074, 93780, 98360, 92533, 93198, 92182, 98568, 90489, 98023, 93566, 96441, 93780, 96386, 96397, 93425, 91136, 94922, 94760, 96756, 90223, 94003, 97368, 98629, 90121, 94546, 97814, 95865, 90504, 91839, 93929, 93636, 92297, 96842, 92071, 95434, 97060, 99875, 91663, 94161, 91374, 95097, 96362, 96017, 98114, 96704, 90868, 99668, 98637, 99408, 96577, 98073, 98641, 96416, 95026, 99310, 95737, 97879, 95397, 95755, 98620, 91568, 91225, 98053, 96118, 95400, 91890, 91449, 99406, 98368, 96480, 97271, 92156, 92397, 91170, 91602, 91534, 92719, 96396, 96543, 97585, 98448, 96794, 96813, 99776, 98243, 95110, 95931, 97265, 98131, 91123, 91724, 93771, 99927, 97980, 90479, 98882, 98992, 91310, 92707, 95054, 99520, 90937, 91207, 93633, 94032, 91138, 93845, 93795, 91306, 92968, 99346, 95476, 93561, 91386, 94238, 91077, 99411, 90672, 93080, 91015, 93841, 93924, 92114, 95030, 90237, 96317, 98539, 94584, 92375, 97230, 93783, 91634, 96201, 93366, 99326, 95610, 92226, 93533, 97912, 93529, 99370, 95906, 91306, 97814, 90269, 90262, 98152, 92633, 96157, 90925, 91940, 92331, 96733, 91012, 99611, 94899, 96690, 94883, 95902, 99310, 95935, 93710, 97187, 98033, 95001, 98524, 91255, 95076, 90574, 96187, 96269, 95484, 98656, 96379, 92928, 94406, 94483, 91838, 98810, 92533, 98967, 99891, 92761, 90014, 91213, 90581, 90281, 92805, 95414, 95622, 97873, 93788, 98325, 92799, 95518, 96011, 90414, 92482, 91611, 96875, 99793, 96460, 93966, 90259, 93069, 94422, 93842, 98163, 91377, 90126, 97322, 94732, 93018, 97538, 99831, 93247, 96370, 97018, 95104, 91077, 98041, 93042, 99490, 98436, 91584, 97862, 96127, 94305, 91531, 90020, 91220, 96883, 95973, 92690, 96419, 96538, 98482, 94455, 97143, 96396, 96763, 94307, 96566, 99406, 91112, 93430, 98947, 91015, 90483, 98602, 94005, 93440, 97768, 95979, 96121, 90909, 98768, 99415, 98271, 95248, 91229, 94516, 90841, 97678, 91331, 98149, 99697, 95830, 95058, 93299, 96246, 94618, 90972, 90813, 94594, 95819, 99123, 92860, 97382, 94034, 98019, 97712, 92390, 95995, 97924, 91868, 96559, 96151, 94075, 93455, 92772, 93874, 97859, 90343, 97383, 96716, 97460, 97499, 93300, 99704, 92057, 90694, 94222, 92840, 95227, 97909, 90538, 97682, 93928, 95502, 96364, 99170, 99137, 93531, 90175, 90712, 93033, 93509, 98618, 98942, 95474, 92283, 94177, 99534, 99437, 97759, 92629, 97006, 91084, 95748, 95446, 99524, 95158, 92319, 95649, 94373, 90523, 92771, 93024, 91011, 93854, 96546, 96036, 96366, 91688, 97255, 93324, 91410, 92378, 98337, 97227, 98947, 99829, 97844, 95415, 90004, 90334, 90300, 94455, 90282, 92308, 99701, 90851, 98686, 96265, 95304, 90958, 97123, 99001, 91066, 91074, 94495, 91612, 90347, 92935, 98065, 95719, 99791, 97879, 92247, 96067, 90185, 95027, 98264, 90529, 97549, 94955, 98098, 90464, 94672, 90552, 92677, 95370, 91922, 91015, 97357, 95830, 96254, 93275, 97394, 97829, 99035, 97519, 92353, 99740, 96563, 99961, 91134, 90472, 91967, 96494, 98704, 93595, 93556, 95469, 91476, 97613, 92611, 96466, 90781, 96971, 93145, 94643, 92897, 91894, 97180, 97006, 99705, 97660, 91760, 97771, 96184, 95574, 98067, 94904, 99695, 98540, 98797, 98844, 91287, 93890, 97238, 97468, 91075, 94913, 90387, 98404, 98195, 90397, 98870, 90971, 90775, 98426, 98445, 95210, 92895, 96641, 91414, 94738, 93644, 96237, 91424, 93505, 97983, 91083, 91787, 93896, 90387, 96520, 95745, 95119, 90009, 94617, 96887, 96279, 90449, 93986, 99321, 98184, 98117, 92602, 90127, 91510, 90676, 91509, 91145, 96708, 91045, 95762, 93180, 92761, 93063, 96528, 93370, 97770, 92075, 94858, 95629, 94198, 97407, 93331, 94833, 95594, 93982, 96498, 97733, 99618, 97199, 94863, 97469, 94257, 98563, 99981, 93972, 90297, 99563, 90201, 99561, 93291, 97815, 97549, 97609, 92539,


fail 14
Your Output (stdout)
96431
96432
96433
96434
96434
96436
96436
96437
96439
96439
96439
96441
96441
96441
96443
96444
96444
96445
96449
96450
96452
96452
96452
96455
96456
96458
96459
96463
96464
96464
96465
96465
96465
96466
96469
96469
96469
96470
96470
96472
96472
96474
96474
96477
96484
96484
96484
96486
96486
96487
96488
96490
96490
96492
96492
96495
96496
96497
96497
96498
96498
96500
96500
96500
96503
96503
96503
96508
96508
96509
96509
96510
96510
96510
96511
96511
96512
96515
96517
96517
96517
96518
96519
96521
96522
96524
96524
96524
96525
96525
96526
96526
96528
96530
96531
96532
96533
96533
96534
96537
96537
96540
96540
96540
96541
96541
96541
96542
96543
96544
96545
96545
96546
96546
96547
96548
96548
96551
96551
96552
96557
96559
96559
96559
96560
96560
96561
96564
96565
96566
96567
96567
96568
96568
96569
96569
96571
96572
96574
96574
96576
96577
96577
96578
96580
96582
96585
96585
96585
96587
96587
96588
96590
96590
96592
96592
96596
96598
96600
96601
96603
96604
96604
96604
96604
96606
96607
96607
96607
96609
96609{-truncated-}
Debug output
arr = [63674, 55705, 58985, 75116, 51746, 80073, 15135, 41001, 99327, 52397, 69393, 23314, 76, 31706, 45026, 69764, 23626, 73740, 29035, 10440, 85360, 38291, 31249, 73066, 942, 37206, 14001, 22444, 81375, 33772, 30866, 39705, 49913, 30438, 21224, 78616, 78193, 23775, 56346, 23351, 45754, 63045, 22242, 24997, 24443, 21923, 54695, 12512, 77184, 81678, 12705, 57942, 39242, 28516, 87979, 25383, 19304, 87803, 186, 48558, 17600, 53528, 20321, 62781, 8750, 22654, 97887, 63693, 78152, 10872, 41457, 77370, 32454, 8810, 16809, 4195, 27027, 35897, 81919, 42389, 66332, 62837, 73973, 6148, 36694, 3052, 99931, 28057, 25240, 18471, 59258, 75767, 63604, 45687, 45093, 18898, 10512, 24772, 28450, 53688, 53459, 4934, 28934, 30156, 66422, 8721, 15065, 29318, 7946, 59625, 57401, 6520, 81886, 16699, 78533, 50980, 11743, 14203, 5381, 11361, 98739, 74313, 31321, 2542, 43650, 46568, 38319, 39674, 12917, 29006, 12564, 42230, 20648, 42826, 11012, 12939, 79865, 64931, 799, 24335, 48739, 70883, 98669, 39106, 60501, 4506, 83359, 49519, 79374, 69845, 40296, 45891, 69073, 36138, 25029, 14414, 95311, 57165, 99499, 20605, 9222, 32545, 3515, 56222, 74723, 80508, 72782, 14704, 9594, 49141, 4331, 13023, 7391, 66273, 408, 96280, 95319, 16936, 92663, 45490, 61801, 41725, 59911, 58672, 56689, 69395, 4795, 90712, 26986, 32702, 47335, 18428, 1361, 67725, 26679, 43831, 77925, 63842, 76272, 60797, 1417, 14027, 52218, 88198, 38345, 13278, 49791, 15973, 71609, 66779, 38848, 19749, 39735, 98764, 85317, 74274, 40107, 98093, 2994, 36300, 420, 97183, 97554, 73485, 98098, 57208, 22978, 87476, 73505, 24385, 69528, 16542, 39537, 29663, 41957, 5958, 37529, 27310, 66811, 2779, 27411, 6613, 88470, 65774, 28657, 65358, 75036, 80928, 47811, 3730, 57175, 38319, 38226, 82941, 65749, 57087, 38164, 94157, 17341, 41816, 24487, 192, 20696, 15853, 943, 44951, 41698, 4918, 12370, 73761, 69614, 37816, 39185, 71478, 73195, 90152, 80082, 4674, 21610, 21634, 75143, 49216, 72263, 47919, 56400, 95191, 95204, 43875, 38406, 47411, 12157, 96739, 77447, 81621, 77108, 14846, 34806, 74043, 14947, 50450, 76814, 95056, 64831, 13590, 32451, 46556, 45750, 38067, 7834, 26959, 73179, 10279, 26202, 27803, 7772, 87003, 21846, 1578, 9728, 9186, 66931, 91661, 5734, 65348, 51274, 82130, 49357, 70456, 66875, 7770, 70273, 3922, 71351, 62700, 62909, 93859, 17438, 59842, 60888, 43791, 39312, 22831, 80062, 72747, 80736, 37005, 90006, 79963, 34891, 46732, 91489, 51414, 41248, 62625, 35756, 96953, 50944, 34076, 20386, 44047, 28869, 50064, 36019, 16934, 8026, 54333, 18445, 98493, 49722, 99822, 81339, 6168, 91760, 21589, 66343, 13036, 86034, 77530, 49270, 10417, 36807, 91814, 83844, 39374, 51415, 37227, 47740, 15055, 6287, 9522, 79565, 30025, 12873, 79386, 60003, 50559, 40467, 55776, 95514, 13344, 15880, 58149, 8769, 89104, 73538, 74507, 26451, 4366, 73825, 77201, 82075, 2950, 42329, 79070, 19172, 84666, 8184, 38767, 88492, 80338, 35761, 66030, 81775, 9454, 50733, 35155, 34231, 19577, 58898, 88088, 58006, 25102, 44124, 97318, 39739, 47056, 10392, 63138, 46741, 5297, 2169, 39885, 38346, 29851, 97176, 21382, 71706, 39038, 16143, 67104, 24564, 78654, 35216, 17469, 31491, 28669, 18448, 29166, 44600, 61719, 10162, 59610, 84954, 81163, 39953, 43342, 46659, 75522, 96720, 32615, 52076, 840, 22354, 19415, 33629, 42850, 60570, 16814, 35363, 16748, 71862, 53826, 85715, 34017, 91666, 29811, 91863, 2886, 65567, 82023, 45606, 31901, 42740, 43021, 10870, 74489, 46796, 3430, 83747, 86523, 71846, 49951, 77412, 68571, 70790, 18520, 86297, 29858, 12756, 88171, 26581, 41931, 87038, 42428, 33361, 46582, 22059, 41934, 18796, 44818, 69584, 84561, 60052, 21463, 76769, 77385, 91073, 53474, 31654, 8656, 17985, 9100, 21284, 87338, 64378, 69744, 85903, 12748, 79761, 96706, 87520, 47543, 12145, 20956, 36638, 93488, 54039, 55643, 37048, 11421, 20037, 18287, 15330, 84273, 3755, 2410, 99064, 95205, 92024, 56808, 95746, 81645, 85076, 14795, 3014, 30451, 82856, 65403, 50027, 99394, 49669, 73881, 29708, 85856, 62023, 39795, 32045, 14841, 77858, 27613, 29756, 85363, 39252, 16841, 99370, 96737, 35250, 96646, 83136, 74473, 6655, 73335, 10156, 29240, 70402, 68143, 98747, 11747, 77568, 57500, 56304, 71424, 96121, 48264, 77751, 87429, 27196, 86385, 19203, 16758, 21962, 69021, 89548, 96159, 65111, 67361, 59394, 42037, 30502, 70216, 34211, 15718, 94704, 26922, 76472, 60182, 14981, 2158, 90197, 68766, 39652, 55000, 575, 16399, 20874, 19872, 71177, 69517, 42492, 97988, 1760, 92120, 58981, 64491, 40804, 82315, 65369, 58678, 28616, 6194, 82609, 52541, 59251, 44061, 48048, 86320, 12437, 27784, 46421, 18824, 60348, 27432, 3250, 65004, 98275, 40406, 89544, 83593, 83135, 46866, 54416, 33558, 89211, 21592, 10494, 39737, 6680, 34249, 45948, 95187, 15167, 27592, 26512, 80661, 61973, 36263, 81029, 28, 62589, 97608, 34884, 14581, 19725, 10355, 67086, 8855, 26328, 16980, 18821, 35925, 77914, 21266, 73985, 71105, 70048, 3801, 65480, 49548, 97889, 65085, 35019, 75459, 6488, 8398, 88698, 68467, 62868, 72774, 45792, 56154, 33906, 40141, 74034, 30815, 57666, 70126, 41049, 63253, 90041, 61029, 88671, 6714, 93464, 96094, 54554, 30052, 9899, 10513, 23780, 90777, 26458, 6461, 92086, 95853, 98724, 50994, 61913, 945, 44220, 14791, 72616, 67281, 56453, 48470, 87001, 29346, 18585, 47628, 17775, 26371, 14997, 27764, 79541, 15894, 48909, 15874, 94657, 18607, 74674, 66805, 64552, 40332, 44508, 29325, 42063, 79132, 51123, 19399, 4862, 53411, 20128, 6301, 35243, 80329, 69024, 80957, 57335, 92912, 3249, 55327, 69230, 8966, 63955, 36620, 34574, 55223, 77075, 30820, 65830, 6118, 78713, 56243, 39727, 18160, 8018, 89739, 34362, 28075, 65426, 25697, 66923, 35750, 31523, 1135, 41214, 11419, 29787, 28918, 84963, 50666, 95042, 85578, 68291, 50490, 78738, 20184, 46809, 95022, 82004, 86394, 65448, 20444, 57925, 51060, 92468, 75236, 65596, 99677, 26973, 4090, 90262, 41461, 37848, 61655, 66190, 15019, 47198, 5735, 51931, 9293, 67148, 28657, 11239, 43924, 35329, 60210, 47132, 98122, 71388, 15916, 21478, 37849, 94558, 70311, 67937, 67326, 627, 6554, 72249, 22826, 95541, 30827, 50547, 34180, 22474, 42864, 3783, 2624, 99324, 22388, 64306, 82329, 4444, 25318, 79269, 7399, 9790, 83315, 94778, 76104, 62768, 65566, 14531, 89786, 60708, 92681, 7236, 45130, 45200, 89114, 28149, 95390, 67458, 22791, 1872, 28684, 40428, 8399, 85851, 59618, 98517, 44280, 97071, 94249, 31655, 11962, 37993, 7825, 46777, 92030, 2067, 69726, 36926, 40415, 73977, 60703, 5779, 25112, 65314, 53751, 3785, 44909, 42410, 71886, 80936, 38959, 9901, 93571, 50835, 48805, 10852, 49716, 90825, 12967, 92339, 44933, 73787, 58261, 63968, 40117, 38633, 1733, 46036, 53443, 58561, 92420, 63926, 72544, 58820, 3122, 95813, 21837, 69039, 28914, 21850, 95951, 69092, 61387, 54768, 52631, 2026, 85387, 54174, 56730, 82754, 88521, 39818, 80591, 27013, 82741, 22716, 95579, 61522, 12065, 67261, 34489, 53311, 60793, 82301, 65251, 13878, 82554, 14671, 92579, 92138, 42076, 84764, 96134, 69034, 98828, 60465, 21273, 6243, 64451, 13158, 61620, 81599, 34395, 37459, 11439, 64624, 28265, 44997, 20210, 47012, 73044, 61752, 51803, 44949, 28740, 68361, 36316, 32828, 86936, 23263, 3888, 51229, 69299, 99692, 6706, 55936, 15346, 49243, 67951, 39346, 76535, 77111, 44547, 60777, 27284, 77098, 54376, 67988, 62526, 28076, 98001, 78656, 76180, 97848, 99960, 17598, 5198, 35220, 5331, 73211, 79847, 56548, 93568, 44889, 42437, 49193, 13455, 2124, 83923, 21003, 589, 65521, 659, 22333, 11920, 50157, 91992, 55104, 657, 82507, 3533, 61994, 59238, 13575, 70585, 58111, 78090, 2937, 31572, 27365, 3537, 41059, 62281, 56213, 29497, 10584, 28275, 18608, 24489, 61161, 65081, 57691, 78007, 86988, 73551, 32130, 48452, 51394, 61290, 8019, 8574, 98573, 70100, 80836, 13800, 29040, 4089, 6221, 63809, 92402, 13477, 3179, 88378, 68733, 95005, 68818, 64797, 68124, 41526, 9834, 66034, 76920, 10486, 52693, 46347, 18707, 83894, 41837, 94203, 78262, 60787, 73206, 21125, 57528, 57331, 39003, 9463, 94053, 89353, 78868, 12141, 74402, 77473, 42453, 83047, 17751, 45929, 68939, 18014, 88119, 82811, 80090, 3241, 17678, 91570, 65231, 497, 88083, 91560, 8838, 46640, 21981, 18783, 74490, 8697, 82617, 37114, 12479, 15200, 65929, 94981, 2652, 79448, 96518, 52804, 78917, 41043, 6620, 62466, 7314, 78292, 85439, 1655, 5693, 85979, 35186, 53139, 99753, 70523, 59678, 71852, 7582, 87681, 41555, 1143, 32809, 36735, 34949, 83607, 25100, 29478, 11880, 61633, 35971, 72350, 52717, 78138, 57747, 35717, 63674, 68894, 83988, 35548, 37670, 84469, 70818, 19641, 48759, 91987, 10332, 33084, 84912, 84737, 49606, 35747, 79102, 71151, 1850, 58423, 94449, 23721, 99827, 13566, 55596, 43141, 35921, 21657, 95551, 33303, 18095, 74826, 4896, 88722, 46456, 35650, 28569, 67542, 81278, 60945, 54358, 60510, 30061, 47869, 76776, 69087, 28555, 22817, 183, 74381, 28702, 32356, 65821, 12619, 35013, 49830, 48826, 72620, 50188, 81291, 73374, 96027, 602, 40079, 36759, 92051, 12807, 60590, 16524, 75027, 3284, 38729, 58667, 95320, 25442, 19014, 9533, 61920, 90198, 96472, 59139, 48553, 39493, 65219, 9501, 34194, 5674, 25033, 67960, 53581, 33942, 52212, 92538, 23674, 79921, 51694, 84055, 67940, 19872, 33664, 28008, 81932, 27222, 99761, 38177, 70857, 75786, 81536, 43430, 42634, 27449, 46951, 89418, 58404, 50040, 79460, 97615, 26562, 89754, 38643, 35613, 76045, 91733, 31344, 4610, 59986, 22234, 57945, 42723, 21767, 96365, 49643, 76040, 2104, 56416, 79530, 23272, 78003, 77605, 12750, 74404, 2246, 389, 59200, 18912, 55545, 1490, 5968, 94936, 32552, 19403, 36125, 67206, 57658, 44384, 85504, 18574, 66817, 67773, 49712, 57689, 97592, 61028, 29951, 3636, 1223, 20904, 98054, 7306, 27693, 74009, 68701, 8786, 37633, 81282, 89923, 10286, 63326, 20968, 1746, 64843, 75189, 57239, 67249, 42547, 9802, 20887, 50321, 38035, 80875, 38340, 34, 25690, 25523, 45778, 2841, 52275, 34784, 16204, 80677, 80686, 79534, 9096, 45588, 63012, 70768, 24597, 69633, 26310, 86701, 7217, 92591, 272, 58188, 97620, 69385, 2414, 28708, 75297, 54169, 23435, 95457, 69825, 28661, 23112, 94075, 43848, 8572, 55346, 11092, 67082, 3873, 89957, 95411, 7350, 66190, 88328, 92959, 62025, 29702, 20192, 47091, 41248, 40767, 79683, 91438, 92914, 75807, 70138, 11570, 28628, 67088, 79252, 67191, 69727, 91601, 58818, 47538, 82934, 29580, 56611, 79243, 16325, 66043, 21882, 18106, 78037, 91289, 20495, 34085, 22502, 54412, 50910, 42244, 21980, 